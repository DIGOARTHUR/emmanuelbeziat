{"posts":[{"title":"Désactiver le :hover pour un scroll fluide","author":"Emmanuel B.","date":"2013-11-28 17:07:44","tags":["html/css"],"categories":["Tutoriels"],"template":"post.vue","basename":"le-hover-pour-un-scroll-fluide","content":"<p>L’astuce CSS du jour, c&#39;est à <strong>Christian Schaefer</strong> et <strong>TheCSSNinja</strong> qu&#39;on la doit.</p>\n<blockquote>\n<p><a href=\"https://twitter.com/paul_irish\">@paul_irish</a> Easy. Apply &quot;pointer-events: none&quot; to the &lt;body&gt; on scrollstart and remove it on scrollend. <a href=\"https://twitter.com/tabatkins\">@tabatkins</a>\n&mdash; Christian Schaefer (@derSchepp) <a href=\"https://twitter.com/derSchepp/statuses/400394164350644224\">12 Novembre 2013</a></p>\n</blockquote>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"c-est-quoi-donc-le-probl-me-dis-\">C&#39;est quoi donc le problème, dis ?</h2>\n<p>Il est question ici d’un problème que certains d’entre vous ont pu rencontrer, si vous avez bossé sur un portfolio ou n’importe quel site avec beaucoup de contenu réagissant à l’action du visiteur et plus précisément au survol du curseur (ce qu&#39;on appelle, dans le jargon des <em>développeux</em>, le &quot;hover&quot;) : lorsque l’on <em>scrolle</em> dans la page, si le curseur survole lesdits éléments, une latence se fait sentir. Et effectivement, si on utilise les outils de <em>monitoring</em> des différents navigateurs, on remarque que ça prend pas mal de ressources d’un seul coup (en plus d’être moche à l’utilisation).</p>\n<h2 id=\"mais-que-faire-\">Mais que faire ?</h2>\n<p>Suivant le <em>tweet</em> mis en lumière plus haut, et l’article de TheCSSNinja, voici un simple petit bout de code à appliquer dans vos pages web pour résoudre le problème. En substance, il s&#39;agit d’appliquer une classe sur body, qui désactive la réactivité des éléments aux actions du curseur, et de la retirer lorsque le défilement est terminé.</p>\n<p>Voici le code CSS en question :</p>\n<pre><code class=\"css\">.disable-hover {\n    pointer-events: none;\n}\n</code></pre>\n<p>&lt;div class=&quot;note note--important&quot;&gt;Notez que la propriété pointer-events cause une erreur dans la validateur CSS du W3C.&lt;/div&gt;\n\n</p>\n<p>Maintenant, un peu de Javascript :</p>\n<pre><code class=\"javascript\">var body = document.body,\n    timer;\n\nwindow.addEventListener(&#39;scroll’, function() {\n\n    clearTimeout(timer);\n\n    if(!body.classList.contains(&#39;disable-hover&#39;))\n        body.classList.add(&#39;disable-hover&#39;)\n\n    timer = setTimeout(function(){\n        body.classList.remove(&#39;disable-hover&#39;)\n    }, 200);\n\n}, false);\n</code></pre>\n<p>Et voilà !</p>\n<h3 id=\"conclusature\">Conclusature</h3>\n<p>Je n’avais jamais été confronté moi-même à ce &quot;bug&quot;, attendu que mon navigateur principal (IE) désactive de lui-même les <em>pointer events</em> lorsqu&#39;on fait défiler une page. Piqué de curiosité en lisant l’article, j’ai donc fait le test sur Chrome et Firefox, pour constater qu&#39;effectivement… Ouch. Je reprend donc ici la moelle de l’article en question, d’une part afin de ne pas oublier cette astuce, d’autre part afin que les anglophobes puissent en bénéficier aussi.</p>\n<p>Source : <a href=\"http://www.thecssninja.com/javascript/pointer-events-60fps\">TheCSSNinja.com</a> - Thanks !</p>\n"},{"title":"Mon top des mauvaises pratiques web","author":"Emmanuel B.","date":"2014-01-02 09:46:17","tags":["html/css"],"categories":["Tutoriels"],"template":"post.vue","basename":"mauvaises-pratiques-web","content":"<p>Dans le domaine du web comme dans tous les autres, il y a de bonnes et de mauvaises pratiques. Rassurez-vous (ou soyez déçu(e)s !) je ne tiendrais pas ici compte de tous les points récurrents sur la validité et la sémantique du html, sur l’optimisation du CSS, js, php ou tout autre langage ou sur les tailles d’images. Non, je vais plutôt parler de pratiques obscures qui peuvent sembler très cool de prime abord et qui sont en fait de vraies mauvaises idées pour diverses raisons.</p>\n<p>À noter que ce top sera étoffé au fur et à mesure que les idées me viendront ou que je rencontrerais des cas d’école.</p>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"-1-modifier-les-curseurs\">#1 : modifier les curseurs</h2>\n<p>J’entends par là <strong>modifier le comportement normal des curseurs</strong>, par exemple utiliser (comme je le vois beaucoup trop) <code>cursor: nw-resize;</code> (<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/01/cursor-resize.png\" alt=\"cursor resize\">) en lieu et place de <code>cursor: pointer;</code> (<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/01/cursor-hand.png\" alt=\"cursor hand\">&lt;/a&gt;) au survol des liens et éléments cliquables. Non, non et NON ! Ce n’est pas cool ni original (on faisait ça sur les pages persos de MultiMania avant même l’ADSL !) et ça ne donne en aucun cas l’impression que vous maîtrisez super bien le CSS.</p>\n<p>Les curseurs sont des icones <strong>sensées</strong>, ayant chacun une <strong>signification visuelle codifiée</strong> ancrée chez la grande majorité des utilisateurs des systèmes d’exploitations principaux (Windows, OSX, distributions Linux). Les mélanger (outre le fait de n’avoir aucun intérêt) risque de perdre le visiteur qui passe sur votre site et lui donner envie de fermer la page sans plus de manières. Alors certes on peut rétorquer qu&#39;il suffirait de faire un effort d’adaptation, mais certains individus qui souffrent de troubles difficultés cognitives (mêmes légères !) peuvent s&#39;en retrouver totalement désorientés.</p>\n<p>Et même, rien que sur le principe, ça ne se fait pas ! Imaginez que j’inverse les touches de votre clavier quand vous voulez poster sur un forum ! De la même façon, attention lorsque vous définissez vos propres curseurs : vous pouvez tout à fait avoir des visiteurs ayant des difficultés visuelles qui utilisent des curseurs très gros et très contrasté, et vous risquez de compliquer passablement leur navigation…</p>\n<p>Mon conseil : <strong>Foutez la paix aux curseurs</strong> !</p>\n<h2 id=\"-2-les-liens-qui-bougent\">#2 : les liens qui bougent</h2>\n<p>Tout aussi insupportable que les curseurs indélicats, les <strong>liens qui foutent le camp au survol</strong>, qui <strong>changent de taille</strong>, <strong>de typo</strong>, <strong>d’espacement</strong> et autres variantes. L’apparition de la propriété <code>transition</code> a popularisé ces derniers temps ce genre de pratiques ; cependant, il n’y a rien de plus pénible qu&#39;un lien qui se barre quand vous voulez le survoler. Pire encore, parfois cela conduit le lien à perdre l’état &quot;survolé&quot; (<em>hover</em>), et donc à retourner à sa place initiale où il se retrouvera à nouveau sous le curseur, reprendra l’état survolé et s&#39;animera ainsi en boucle bêtement, rendant le clic plus compliqué qu&#39;un jeu de famille <strong>MB</strong>.</p>\n<p>La seule variante utilisable, c&#39;est quand le lien est un bloc entier qui <strong>ne change pas de taille au survol</strong>, et dont seul le contenu change.</p>\n<p>Mon conseil : tenez-vous en au changement de couleur et aux <a href=\"http://www.w3.org/TR/CSS21/text.html#decoration\"><code>text-decoration</code></a>.</p>\n<h2 id=\"-3-les-balises-qui-n-existent-pas\">#3 : les balises qui n’existent pas</h2>\n<p>Très récemment, je suis tombé sur ça :</p>\n<pre><code class=\"html\">&lt;aa&gt;Quelque chose&lt;/aa&gt;\n</code></pre>\n<p>Ou bien encore ça :</p>\n<pre><code class=\"html\">&lt;r class=&quot;valeur&quot;&gt;Quelque chose&lt;/r&gt;\n</code></pre>\n<p>Inutile de vous dire que ça n’est en aucun cas du html, que ça n’est pas valide, et je trouve absolument scandaleux que les navigateurs affichent un truc pareil sans broncher…</p>\n<p>Alors d’accord, le fait qu&#39;on puisse utiliser des balises inconnues, ça a bien servi au passage du html5 (et encore maintenant pour de vieux IE), mais là, quand même, merde !</p>\n<p>Bref, mon conseil : <strong>Tenez-vous en aux balises existantes en html, et validez votre code !</strong></p>\n"},{"title":"Doucement sur le box-sizing !","author":"Emmanuel B.","date":"2014-01-10 13:27:20","tags":["html/css"],"categories":["Diatribes"],"template":"post.vue","basename":"ur-le-box-sizing","content":"<p>Récemment dans les milieux autorisés, un certain bout de code a fait son apparition. Rapidement intégré dans les thèmes WordPress, le Framework Bootstrap, Normalize et maints autres projets, <code>box-sizing</code> est devenu un &quot;indispensable&quot; dans une feuille de style aujourd’hui, alors seulement qu&#39;on commence enfin à mettre la technique du <em>Reset CSS</em> de côté.</p>\n<p>Mais Est-ce vraiment une bonne idée ?</p>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"souvenons-nous\">Souvenons-nous</h2>\n<p>Un jour, un gugusse fort inspiré a eu une idée &lt;del&gt;merdique&lt;/del&gt; révolutionnaire en découvrant le sélecteur universel <code>*</code>. Fort embêté par quelques marges automatiques, notamment celle sur body (Pour ceux qui l’ignoreraient, body a un margin automatique de 8px), il s&#39;est dit que, plutôt que de penser à mettre quelques <code>margin: 0;</code> là où il en avait besoin, ce serait plus simple de tout péter avec ce petit sélecteur. C&#39;est ainsi qu&#39;est né le premier des reset CSS :</p>\n<pre><code class=\"css\">* {\n    margin: 0;\n    padding: 0;\n}\n</code></pre>\n<p>En suivit celui d’Eric Meyer qui, à l’époque d’IE6, avait le bon goût de tenter de corriger intelligement les différences de marges automatiques d’un navigateur à l’autre. Seulement voilà  : à tout péter comme un gros babouin avec ces reset, il en résulte un problème conséquent : les marges automatiques ne sont pas faites pour les clebs et quand on les vire toutes, le texte devient complètement illisible. L’interaction normale des éléments html les uns envers les autres est un poil compromise, les paragraphes ne sont plus des paragraphes, etc.. À l’époque du html4 où internet était un vaste réseau de pages persos MultiMania pleines de gifs &quot;codées&quot; via des logiciels WYSIWYG, on ne se posait pas trop la question : on rustinait ça comme de grosses otaries à coup de <code>&lt;br /&gt;</code> et hop, on avait des marges.</p>\n<p>Puis est venu le temps du xhtml, où l’accent était mis sur <strong>la sémantique du html</strong>, la <strong>séparation de la mise en forme</strong>… Toujours habitués à utiliser des Reset, il a bien fallu se dire qu&#39;après avoir foutu en l’air toutes les marges, il fallait ensuite les remettre manuellement. Quarante lignes pour retirer toutes les marges (Merci Meyer), quatre-vingt pour remettre des marges (Vous comprendrez que je trouve le principe débile) et de futures longues heures à débuguer ça parce que telle ou telle balise aura été oublié, parce que les marges qu&#39;on a mises ne fonctionnent pas comme attendu et diverses raisons supplémentaires.</p>\n<p>Alors que les navigateurs se sont standardisés entretemps, il a fallu presque dix ans pour qu&#39;apparaisse l’idée d’une feuille de style de base qui redéfinirait directement et correctement les marges automatiques plutôt que de carrément les supprimer.</p>\n<p>Et je trouve personnellement qu&#39;aujourd’hui, on se passe très bien des deux.</p>\n<h3 id=\"un-point-sur-le-s-lecteur-universel\">Un point sur le sélecteur universel</h3>\n<p>Le sélecteur universel <code>*</code> (À ne pas confondre avec le <a href=\"http://www.emmanuelbeziat.com/blog/principes-du-css-les-selecteurs-partie1-css2/#selecteur-enfant-indirect\">sélecteur d’enfant indirect</a>) n’a que peu d’utilité dans un cas pratique. On s&#39;en sert très peu, voire quasiment jamais. Ses manifestations les plus courantes sont généralement les plus mauvaises, comme dans le cas de ce reset sauvage.</p>\n<blockquote>\n<p>&quot;Toi là, vil élément ! Peu importe qui tu es, tu n’auras plus aucune marge !</p>\n<ul>\n<li><p>Mais monsieur, je suis un élément <em>inline</em>, ça n’a aucune utilité sur moi, je n’ai aucune marge !</p>\n</li>\n<li><p>Je t&#39;ai pas demandé ton avis, petit bouseux. SUIVANT ! Toi là, vil élément…&quot;</p>\n</li>\n</ul>\n</blockquote>\n<p>Le résultat est donc d’attribuer des propriétés à tous les éléments de la page, sans se soucier d’un besoin quelconque. En effet, les éléments comme <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>, <code>&lt;a&gt;</code>, etc. n’ont aucune marge par défaut. Quelle utilité donc d’alourdir le rendu et la feuille de style avec des propriétés qui n’ont pas lieu d’être ?</p>\n<h2 id=\"le-parall-le-avec-le-pass-\">Le parallèle avec le passé</h2>\n<p>Partant de ce qu&#39;on a vu du passé, analysons le présent : le CSS3 est arrivé avec ses grands sabots et, comme à chaque nouveauté, tout a été écumé par mode : les designs de sites arborant de beaux gradients générés en CSS, les coins arrondis dans tous les sens plus que de raison, les ombres sous les blocs ou les textes, les animations… Tout y passe, comme si le fait de rendre quelque chose possible aisément le rendait indispensable.</p>\n<p>Après la cosmétique douteuse, on s&#39;est rendu compte qu&#39;il y avait aussi du pratique. Et alors est arrivé la mode de <code>box-sizing: border-box;</code>.</p>\n<h3 id=\"quel-int-r-t-\">Quel intérêt ?</h3>\n<p>Le fait est que définir <code>width</code> à un élément concerne en fait la largeur de son contenu, indépendamment de ses marges et de ses bordures. Ainsi, si on attribue à un bloc ce code CSS :</p>\n<pre><code class=\"css\">element {\n    width: 100px;\n    padding: 10px;\n    border: 2px solid white;\n}\n</code></pre>\n<p>La largeur totale réelle de l’élément sera de 124px : 100px de large, deux fois 10px de padding (gauche et droite), et deux fois 2px de bordure.</p>\n<p>Il suffit donc de prendre en compte ce fait et de modifier retirer 24px à la largeur attribuée :</p>\n<pre><code class=\"css\">element {\n    width: 76px;\n    padding: 10px;\n    border: 2px solid white;\n}\n</code></pre>\n<p>Ainsi, notre élément fera bien 100px de large. Mais désormais, grâce à <code>box-sizing</code> il existe un autre moyen :</p>\n<pre><code class=\"css\">element {\n    box-sizing: border-box;\n    width: 100px;\n    padding: 10px;\n    border: 2px solid white;\n}\n</code></pre>\n<p>En effet, la valeur <code>border-box</code> force le navigateur à prendre en compte la largeur attribuée sur l’ensemble de l’élément plutôt que sur son seul contenu (par opposition donc à son autre valeur, celle attribuée aux éléments par défaut : <code>content-box</code>). L’élément fera donc bien 100px de largeur, avec une marge interne de 10px de chaque côté et une bordure de 2px.</p>\n<p>Et c&#39;est super pratique, dans le cas par exemple des formulaires si l’on souhaite que les champs aient une largeur de 100% (un des rares cas où <code>width: 100%</code> est valable) tout en ayant une marge intérieure pour que le texte ne soit pas collé au bord.</p>\n<h2 id=\"ne-pas-faire-n-importe-quoi\">Ne pas faire n’importe quoi</h2>\n<p>De là a fleuri ce petit bout de code en début de nombreuses feuilles de style, comme je le disais en début d’article :</p>\n<pre><code class=\"css\">*,\n*:after,\n*:before {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n</code></pre>\n<p>Retour de la méthode paladin des croisades :</p>\n<blockquote>\n<p>&quot;Toi là, vil élément ! Peu importe qui tu es, toi et tes éventuels pseudo-éléments aurez un modèle de contenu &quot;border-box&quot; !</p>\n<ul>\n<li><p>Mais monsieur, je suis un élément <em>inline</em>, ça n’a aucune utilité sur moi… Je ne prend même pas les marges en compte !</p>\n</li>\n<li><p>Je t&#39;ai pas demandé ton avis, petit con. SUIVANT ! Toi là, vil élément…&quot;</p>\n</li>\n</ul>\n</blockquote>\n<p>Le rendu de la page sera donc alourdi par un travail inutile qui ajoutera à <strong>tous</strong> les éléments un <code>box-sizing</code>.</p>\n<p><strong>Oui mais, si on a décrété que faire ça avec les marges était mal, pourquoi ça serait bien avec autre chose ?</strong></p>\n<h3 id=\"l-effet-kiss-kool-compatibilit-\">L’effet kiss-kool : compatibilité</h3>\n<p>Il y a encore des gens coincés à la dernière décade, qui surfent avec Internet Explorer 7. Si vous devez en tenir compte, oubliez directement <code>box-sizing</code> ! Faute de quoi, vous développerez votre site avec des valeurs width sans vous soucier d’y soustraire les marges. De fait, lorsque vous regarderez votre site via ce navigateur qui ne prend pas cette propriété en compte, toutes les largeurs de vos éléments seront faussées ! Moche, hein ?</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>(Vous avez remarqué ? Je termine beaucoup d’articles avec une conclusion.)</p>\n<p>Adonc, comme un cycle, la bêtise de l’emploi du sélecteur universel pour attribuer des propriétés cools et bien à la mode revient. Et je ne vois <strong>toujours pas</strong> en quoi ce serait une bonne idée, cette fois. Je laisse Vaas vous expliquer :</p>\n<p>&lt;div class=&quot;video&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/kNdGM6tOoT4&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;\n\n</p>\n<p>Alors, plutôt que de mettre <code>box-sizing: border-box;</code> partout, utilisez-le simplement lorsque vous en avez besoin.</p>\n"},{"title":"Principes du CSS - Les sélecteurs (Partie 2 : CSS3)","author":"Emmanuel B.","date":"2014-02-04 08:55:02","tags":["html/css"],"categories":["Tutoriels"],"template":"post.vue","basename":"u-css-les-selecteurs-partie-2-css3","content":"<p>Lorsqu&#39;on utilise du CSS, on peut se contenter des trois sélecteurs de base : les éléments, les identifiants et les classes. Souvent, sans le savoir, vous utilisez un sélecteur simple de descendance, par un espace entre deux de ces sélecteurs - hé oui ! Mais il existe d’autres sélecteurs plus avancés, nous allons les passer en revue.</p>\n<p>Je ne traite ici que du CSS 3. Je vous recommande d’avoir lu préalablement l’article concernant les <a href=\"http://www.emmanuelbeziat.com/blog/principes-du-css-les-selecteurs-partie1-css2/\" title=\"Principes du CSS – Les sélecteurs (Partie1 : cSS2)\">sélecteurs du CSS2</a>.</p>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"les-espaces-de-noms-namespace-\">Les espaces de noms (namespace)</h2>\n<pre><code class=\"css\">namespace|div {\n    color: red\n}\n</code></pre>\n<p>Une des grandes nouveautés apportées par cette nouvelle version est la gestion des espaces de noms. Les programmeurs sauront de quoi je parle. Pour faire simple, on peut définir un espace de nom particulier et n’appliquer des propriétés qu&#39;aux balises dans cet espace de nom.</p>\n<p><strong>Exemple :</strong> Définissons un espace de nom pour une page particulière :</p>\n<pre><code class=\"css\">@namespace produits url(http://www.monsite.com/produits.html);\n</code></pre>\n<p>Puis un espace de nom pour une autre page :</p>\n<pre><code class=\"css\">@namespace membre url(http://www.monsite.com/membre.html);\n</code></pre>\n<p>Il est désormais possible d’appliquer des modifications qui ne seront spécifiques qu&#39;à ces pages :</p>\n<pre><code class=\"css\">/* propriétés qui ne seront appliqués que sur les balises h1\nde la page définie par l’espace de nom &quot;produits&quot; */\nproduits|h1 { color: red }\n\n/* uniquement les balises h1 dans la page définie par &quot;membre&quot; */\nmembre|h1 { color: red }\n\n/* uniquement les balises h1 qui ne sont PAS dans un espace de nom\n(donc autre que dans les pages définies plus haut */\n|h1 { color: red }\n\n/* tout élément h1 dans n’importe quel espace de nom */\n*|h1 { color: red }\n\n/* par défaut */\nh1 {color: red}\n</code></pre>\n<p>À noter qu&#39;il est possible de définir un nom d’espace par défaut :</p>\n<pre><code class=\"css\">@namespace &quot;http://www.monsite.com&quot;\n</code></pre>\n<p>Tous les sélecteurs css qui n’ont pas d’espace de nom spécifié seront donc attribués à celui-ci.</p>\n<h2 id=\"les-s-lecteurs\">Les sélecteurs</h2>\n<h3 id=\"s-lecteur-d-adjacence-indirecte-\">Sélecteur d’adjacence indirecte : &quot;~&quot;</h3>\n<pre><code class=\"css\">h1 ~ pre {\n    color: red\n}\n</code></pre>\n<p>Dans la même idée que les sélecteurs d’adjacence <code>+</code>, celui-ci permet d’atteindre tout élément (ici <code>pre</code>) de même niveau que l’élément référent (ici <code>h1</code>). La différence étant qu&#39;ici, l’élément cible n’a pas besoin d’être directement adjacent à l’élément référent.</p>\n<pre><code class=\"html\">&lt;h1&gt;Titre&lt;/h1&gt;\n&lt;p&gt;Pas affecté&lt;/p&gt;\n&lt;pre&gt;Affecté&lt;/pre&gt;\n&lt;p&gt;Pas affecté&lt;/p&gt;\n</code></pre>\n<h3 id=\"s-lecteur-d-attribut\">Sélecteur d’attribut</h3>\n<pre><code class=\"css\">a[href^=https] {\n    color: red\n}\n</code></pre>\n<p>Ce sélecteur permet de choisir un élément dont la valeur de l’attribut commence par ce que vous avez défini. Dans l’exemple, tous les liens dont l’adresse commence par &quot;https&quot;.</p>\n<pre><code class=\"html\">&lt;a href=&quot;http://www.monsite.com&quot;&gt;Ce lien ne sera pas affecté&lt;/a&gt;\n&lt;a href=&quot;https://www.monsite.com&quot;&gt;Ce lien sera affecté&lt;/a&gt;\n</code></pre>\n<p>Évidemment, ça ne se limite pas qu&#39;aux liens.</p>\n<pre><code class=\"css\">a[href$=.pdf] {\n    color: red\n}\n</code></pre>\n<p>Avec celui-ci, on peut choisir à l’inverse un élément dont la valeur de l’attribut fini par ce que vous avez défini. L’exemple au-dessus permet donc de choisir tous les liens vers un fichier PDF.</p>\n<pre><code class=\"html\">&lt;a href=&quot;monfichier.doc&quot;&gt;Ce lien ne sera pas affecté&lt;/a&gt;\n&lt;a href=&quot;monfichier.pdf&quot;&gt;Ce lien sera affecté&lt;/a&gt;\n&lt;a href=&quot;monfichier.pdf.doc&quot;&gt;Ce lien ne sera pas affecté&lt;/a&gt;\n</code></pre>\n<pre><code class=\"css\">a[href*=monsite] {\n    color: red\n}\n</code></pre>\n<p>Celui-ci enfin, permet de sélectionner l’élément dont l’attribut désigné comporte au moins la chaîne de caractère définie.</p>\n<pre><code class=\"html\">&lt;a href=&quot;http://www.lesite.com&quot;&gt;Ce lien ne sera pas affecté&lt;/a&gt;\n&lt;a href=&quot;http://www.monsite.com&quot;&gt;Ce lien sera affecté&lt;/a&gt;\n</code></pre>\n<h2 id=\"les-pseudo-classes\">Les pseudo-classes</h2>\n<h3 id=\"-last-child\">:last-child</h3>\n<p>À la manière de <code>:first-child</code>, cette pseudo-classe cible un élément s&#39;il est le dernier enfant de son parent.</p>\n<pre><code class=\"css\">div p:last-child {\n    color: red;\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Si on voit maintenant, pour le même code CSS, ce code HTML :</p>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;h2&gt;Ce titre ne sera pas affecté&lt;/h2&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Rien ne va se passer. En effet, le code CSS signifie &quot;cibler tous les éléments <code>p</code> s&#39;il s&#39;agit du dernier enfant de leur parent&quot; et non &quot;cibler tous les éléments <code>p</code> qui sont les derniers de ce éléments de type <code>p</code> enfants&quot;. Or dans ce cas, c&#39;est <code>h2</code> qui est le dernier enfant.</p>\n<h3 id=\"-first-of-type\">:first-of-type</h3>\n<p>L’élément manquant à <code>:first-child</code>. Cette pseudo-classe permet cette fois-ci de cibler chaque premier élément d’un type donné, pour son parent (par exemple, le premier &lt;span&gt; dans un paragraphe).</p>\n<pre><code class=\"css\">div *:first-of-type {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;span&gt;Cet élément sera affecté&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;div&gt;\n    &lt;h2&gt;Ce titre sera affecté&lt;/h2&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;span&gt;Cet élément sera affecté&lt;/span&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-last-of-type\">:last-of-type</h3>\n<p>Le parfait opposé de <code>:first-of-type</code>. Cette pseudo-classe permet cette fois-ci de cibler chaque dernier élément d’un type donné, pour son parent.</p>\n<pre><code class=\"css\">div p:last-of-type {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;h2&gt;Ce titre ne sera pas affecté&lt;/h2&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-only-of-type\">:only-of-type</h3>\n<p>Un peu plus particulier cette-fois ci, cette pseudo-classe permet d’affecter un élément qui est le seul de son type par rapport à son parent.</p>\n<pre><code class=\"css\">div p:only-of-type {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;div&gt;\n    &lt;h2&gt;Ce titre ne sera pas affecté&lt;/h2&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;h2&gt;Ce titre ne sera pas affecté&lt;/h2&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-only-child\">:only-child</h3>\n<p>Comme son nom l’indique, cette pseudo-classe n’agit que sur un élément qui est le seul enfant de son parent.</p>\n<pre><code class=\"css\">div p:only-child {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;div&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-nth-child-n-\">:nth-child(n)</h3>\n<p>Un peu particulier, cette pseudo-classe permet de cibler un élément qui est le _n_ième enfant de son parent. Par exemple, si on veut choisir le second élément d’une liste :</p>\n<pre><code class=\"css\">li:nth-child(2) {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;ul&gt;\n    &lt;li&gt;Cet élément ne sera pas affecté&lt;/li&gt;\n    &lt;li&gt;Cet élément sera affecté&lt;/li&gt;\n    &lt;li&gt;Cet élément ne sera pas affecté&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<h3 id=\"-nth-last-child-n-\">:nth-last-child(n)</h3>\n<p>Même chose que précédement, mais cette fois le décompte de <em>n</em> commence en partant du dernier enfant. Par exemple, si on veut cibler l’avant-dernier élément d’une liste :</p>\n<pre><code class=\"css\">li:nth-last-child(2) {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;ul&gt;\n    &lt;li&gt;Cet élément ne sera pas affecté&lt;/li&gt;\n    &lt;li&gt;Cet élément ne sera pas affecté&lt;/li&gt;\n    &lt;li&gt;Cet élément ne sera pas affecté&lt;/li&gt;\n    &lt;li&gt;Cet élément sera affecté&lt;/li&gt;\n    &lt;li&gt;Cet élément ne sera pas affecté&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<h3 id=\"-nth-of-type-n-\">:nth-of-type(n)</h3>\n<p>Similaire à <code>:nth-child(_n_)</code> , celle-ci permet de cibler le _n_ième enfant d’un type défini. Par exemple, si on veut choisir le troisième paragraphe :</p>\n<pre><code class=\"css\">p:nth-of-type(3) {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Sachant qu&#39;il s&#39;agit de type et non de nombre d’enfant, on peut s&#39;en servir même lorsqu&#39;il y a des balises entre deux :</p>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;span&gt;balise&lt;/span&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;span&gt;balise&lt;/span&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;span&gt;balise&lt;/span&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-nth-last-of-type-n-\">:nth-last-of-type(n)</h3>\n<p>Cette fois-ci, vous pouvez cibler le dernier d’un type, en partant du dernier de ce même type. Par exemple pour un avant-dernier paragraphe :</p>\n<pre><code class=\"css\">p:nth-last-of-type(3) {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Sachant qu&#39;il s&#39;agit de type et non de nombre d’enfant, on peut s&#39;en servir même lorsqu&#39;il y a des balises entre deux :</p>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;span&gt;balise&lt;/span&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;span&gt;balise&lt;/span&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n    &lt;span&gt;balise&lt;/span&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-not-selecteur-\">:not(selecteur)</h3>\n<p>Un peu particulier encore une fois, cette pseudo-classe permet d’affecter tout élément qui n’est pas du type spécifié. Un exemple :</p>\n<pre><code class=\"css\">:not(p) {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Cet élément sera affecté&lt;/li&gt;\n        &lt;li&gt;Cet élément sera affecté.\n            &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-empty\">:empty</h3>\n<p>Une pseudo-classe toute simple qui permet de cibler tout élément qui n’a aucun enfant.</p>\n<pre><code class=\"css\">p:empty {\n    color: red\n}\n</code></pre>\n<pre><code class=\"html\">&lt;div&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément sera affecté&lt;/p&gt;\n    &lt;p&gt;Cet élément ne sera pas affecté\n        &lt;span&gt;car il contient un enfant&lt;/span&gt;\n    &lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n<h3 id=\"-enabled\">:enabled</h3>\n<p>Celle-ci permet de cibler tout élément qui est, soit par défaut, soit précisément via html, défini comme &quot;actif&quot;. C&#39;est surtout utile pour les éléments de formulaire.</p>\n<p><code>input:enabled {\n    background: white\n}</code></p>\n<pre><code class=\"html\">&lt;!-- cet élément sera affecté --&gt;\n&lt;input type=&quot;text&quot; /&gt;\n&lt;!-- cet élément ne sera pas affecté, il est désactivé --&gt;\n&lt;input type=&quot;text&quot; disabled=&quot;disabled&quot; /&gt;\n</code></pre>\n<h3 id=\"-disabled\">:disabled</h3>\n<p>À l’inverse, cette pseudo-classe permet de cibler un élément défini comme désactivé.</p>\n<pre><code class=\"css\">input:disabled {\n    background: grey\n}\n</code></pre>\n<pre><code class=\"html\">&lt;!-- cet élément ne sera pas affecté, il n’est pas désactivé --&gt;\n&lt;input type=&quot;text&quot; /&gt;\n&lt;!-- cet élément sera affecté, il est désactivé --&gt;\n&lt;input type=&quot;text&quot; disabled=&quot;disabled&quot; /&gt;\n</code></pre>\n<h2 id=\"conclusion-\">Conclusion… ?</h2>\n<p>Tout en essayant d’être complet, je n’ai pas été exhaustif. Le CSS3 est une norme loin d’être terminée, qui évolue encore, et qui pourrait voir d’autres éléments s&#39;ajouter par la suite. Comme toujours, n’oubliez pas qu&#39;on peut toujours mixer plusieurs sélecteurs !</p>\n"},{"title":"Des barres de progression toutes simples en CSS","author":"Emmanuel B.","date":"2014-02-06 04:37:43","tags":["html/css"],"categories":["Tutoriels"],"template":"post.vue","basename":"de-progression-toutes-simples-en-css","content":"<p>J’ai reçu récemment une demande d’explication sur ma méthode pour créer les barres de progression sur mon site (sous les compétences, en page d’accueil).</p>\n<p>Bien que tout simple, je me suis dit que ça pourrait intéresser du monde. En avant guinguette !</p>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"le-html\">Le html</h2>\n<p>Alors on va la faire simple. Pour moi j’ai utilisé une liste non-ordonnée html, simplement parce qu&#39;il s&#39;agissait d’une liste de compétences (Ouais, c&#39;est pas compliqué le html, voyez ?). Inutile de préciser que ça marcherait avec n’importe quoi. Aussi, pour l’exemple, je vais utiliser de bonnes vieilles <code>div</code>.</p>\n<p>&lt;div class=&quot;barre&quot; data-length=&quot;30&quot;&gt;&lt;/div&gt;</p>\n<p>&lt;div class=&quot;barre&quot; data-length=&quot;20&quot;&gt;&lt;/div&gt;</p>\n<p>&lt;div class=&quot;barre&quot; data-length=&quot;50&quot;&gt;&lt;/div&gt;</p>\n<p>&lt;div class=&quot;barre&quot; data-length=&quot;80&quot;&gt;&lt;/div&gt;</p>\n<p>&lt;div class=&quot;barre&quot; data-length=&quot;40&quot;&gt;&lt;/div&gt;```</p>\n<h3 id=\"data-length-\">Data-length ?</h3>\n<p>Alors certains se posent peut-être une question intéressante, par exemple &quot;mais kaisseucé ?&quot;.</p>\n<p>L’attribut <code>data-</code> permet de stocker des données sur des éléments, tout simplement. <a href=\"http://www.alsacreations.com/article/lire/1397-html5-attribut-data-dataset.html\">D’autres en parlent bien mieux que moi</a> !</p>\n<p>C&#39;est arbitraire, j’aurais aussi bien pu utiliser une classe, mais je trouvais ça tellement plus <em>pimp</em> d’utiliser de beaux <code>data-</code> que j’y ai été à cœur joie. Dans les faits, ça se prête très bien au CSS avec les <a href=\"http://www.emmanuelbeziat.com/blog/principes-du-css-les-selecteurs-partie1-css2/#selecteur-attribut\">sélecteurs d’attributs</a> (va lire mon tutoriel sur les sélecteurs, va !).</p>\n<h2 id=\"le-css\">Le CSS</h2>\n<p>Ma foi, ce n’est pas plus compliqué que ça. On va utiliser le positionnement relatif et absolu, et le pseudo-élément :after (se référer au tutoriel sur les sélecteurs, encore une fois).</p>\n<p>On commence par donner le style de fond à la <code>div</code>, ainsi qu&#39;un positionnement relatif pour pouvoir ensuite positionner le pseudo-élément.</p>\n<pre><code class=\"css\">.barre {\n    width: 300px;\n    background: grey;\n    border: 2px solid grey;\n    position: relative;\n    height: 10px;\n}\n</code></pre>\n<p>Maintenant, on donne un style au pseudo-élément, qui devient notre barre &quot;intérieure&quot; :</p>\n<pre><code class=\"css\">.barre:after {\n    content: &quot;&quot;\n    position: absolute;\n    background: orange;\n    left: 0;\n    top: 0;\n    bottom: 0;\n}\n</code></pre>\n<p>Reste ensuite à leur attribuer une largeur, en fonction de la valeur de notre <code>data-length</code>. Je ne vous mets que les dizaines (parce que ça n’a pas beaucoup d’intérêt de faire plus, à mon sens ; et aussi parce que j’ai la flemme de me cogner les 90 autres valeurs.).</p>\n<pre><code class=\"css\">.barre[data-length=&quot;10&quot;]:after { width: 10% }\n.barre[data-length=&quot;20&quot;]:after { width: 20% }\n.barre[data-length=&quot;30&quot;]:after { width: 30% }\n.barre[data-length=&quot;40&quot;]:after { width: 40% }\n.barre[data-length=&quot;50&quot;]:after { width: 50% }\n.barre[data-length=&quot;60&quot;]:after { width: 60% }\n.barre[data-length=&quot;70&quot;]:after { width: 70% }\n.barre[data-length=&quot;80&quot;]:after { width: 80% }\n.barre[data-length=&quot;90&quot;]:after { width: 90% }\n.barre[data-length=&quot;100&quot;]:after { width: 100% }\n</code></pre>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Et voilà ! On peut imaginer des animations pour remplir les barres petit à petit, récupérer la valeur de data-length en js dynamiquement et tout ça, mais c&#39;était juste pour expliquer le principe.</p>\n<p>Pour voir le tout en action, vous pouvez aller sur <a href=\"http://codepen.io/EmmanuelB/pen/nwivz\" title=\"CodePen\">mon CodePen</a>.</p>\n"},{"title":"Windows 8 est très bien !","author":"Emmanuel B.","date":"2014-02-08 08:23:18","tags":["windows"],"categories":["Diatribes"],"template":"post.vue","basename":"st-tres-bien","content":"<p>Boum, ma gueule ! Oui, j’attaque directement par la conclusion : j’ai toujours été mauvais en dissertations.</p>\n<p>Plus sérieusement, très régulièrement il m&#39;arrive sur de très nombreux forums de voir différentes aberrations sur la dernière mouture de Windows. Affirmations sorties du chapeau, croyances erronées véhiculées par les médias… Et si on y jetais un coup d’œil ?</p>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"le-cas-vista\">Le cas Vista</h2>\n<p><img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/02/windows-vista-logo.png\" alt=\"Windows vista\"></p>\n<p>Avant de commencer avec le cas Windows 8, je vais d’abord me pencher sur Vista et m&#39;atteler tout d’abord à détruire un bon gros à-priori (à tel point que j’ai même la prétention de l’écrire en gras !) : <strong>Vista était un très bon OS</strong>.</p>\n<p>Il n’a pas rencontré un succès marketing, c&#39;est vrai. C&#39;est le cas de beaucoup de bons produits/films/artistes/groupes musicaux/autres, et inversement, beaucoup de sombre nullités (c&#39;est pour rester poli) ont droit à une adoration médiatique surcotée et totalement injustifiée. Et si les ventes n’étaient pas au rendez-vous, c&#39;est pour quelques raisons que nous allons voir tout de suite.</p>\n<h3 id=\"les-incompatibilit-s\">Les incompatibilités</h3>\n<p>Le premier problème qui a été relevé, c&#39;était de &quot;nombreuses&quot; incompatibilités matérielle et logicielles. En informatique, les technologies évoluent très vite, et Windows XP était sorti en 2001 avec une compatibilité pour du matériel antérieur. Évidemment, il a fallu faire des choix : rester en arrière et freiner l’avancée technologique, ou bien forcer un peu les choses. Le résultat fut un mélange des deux. Les promesses de ce qui devait alors être <strong>Windows Longhorn</strong> n’ont pas pu être toutes respectées, mais Vista partait néanmoins d’une toute nouvelle version du Noyau NT (version 6.0). De fait, les constructeurs de matériel devaient s&#39;adapter à ce nouvel environnement et développer de nouveaux drivers.</p>\n<p>Certains (nVidia, par exemple) se sont empressés de sortir des pilotes compatibles dès les premières <em>developer preview</em> afin d’être prêts lors de la sortie finale, alors que d’autres n’ont pas daigné se sortir les doigts du postérieur (ATI ou pire, Creative Labs qui a tout simplement longtemps refusé de rendre compatible son logiciel pour cartes son X-Fi). Résultat : les forums pollués de &lt;q&gt;Bouuh, mon matériel ne marche pas sur Vista, c&#39;est un OS de merde&lt;/q&gt;. Et voilà comment on fait une fausse réputation à un OS, alors que Vista embarquait, tout comme 7 et 8, un paquet incroyable de drivers et de jeux d’instructions de tous types afin d’avoir une compatibilité bien plus étendue que celle d’XP.</p>\n<h3 id=\"le-besoin-de-mat-riel-puissant\">Le besoin de matériel puissant</h3>\n<p>Il y avait aussi une composante matérielle à prendre en compte. L’évolution du PC était au point mort depuis un bon moment. Comme XP tournait très bien sur de vieilles machines et que le 64bits n’était pas d’actualité (sachant qu&#39;un Windows 32bits ne peut gérer - théoriquement - que 3,25Go de mémoire vive), il n’y avait pas de besoins supplémentaires. De fait, les ordinateurs en vente dans le commerce stagnaient depuis un bon moment à 512Mo de RAM en moyenne, et les processeurs double-cœur n’étaient qu&#39;un jouet haut-de-gamme pour geeks avides de puissance.</p>\n<p>Oui mais voilà, Vista avait besoin de plus de ressources, bien plus. Alors il a fallu changer tout ça, mettre un bon coup de pied dans la fourmilière, détartrer les usines et remettre les ingénieurs au boulot. En moins d’un an, les PC du commerce sont passés en moyenne à 2Go de RAM et le Core 2 Duo d’Intel était devenu la norme, le tout sans augmentation drastique de prix pour le consommateur. Si aujourd’hui vous pouvez faire tourner votre 7 adoré de manière fluide c&#39;est parce que Vista est arrivé comme un patron, a posé ses bollocks (ou ses ovaires, personne ne sait si Windows est un mâle ou une femelle) sur le bureau. Ouais.</p>\n<p>De plus, il avait le bon goût d’être disponible en 32bits et en 64bits. Si la seconde version a mis plus de temps à trouver son intérêt auprès de l’utilisateur final, ça a été une grosse avancée pour les constructeurs évoqués plus haut, qui se sont réellement penchés en masse sur le développement de drivers 64bits ; ce qui a largement servi à 7 pour s&#39;installer confortablement, une fois le terrain bien préparé.</p>\n<h4 id=\"pour-ces-deux-cas-ce-n-tait-pas-la-faute-de-microsoft-\">Pour ces deux cas, ce n’était PAS la faute de Microsoft.</h4>\n<p>La vraie grosse erreur de la firme, c&#39;est d’autoriser la labellisation &quot;Vista Ready&quot; de machines trop peu puissantes, ce afin d’améliorer les ventes. C&#39;est pour cette raison que Vista est apparu lourd, gourmand et lent.</p>\n<h3 id=\"avanc-es-de-vista\">Avancées de Vista</h3>\n<p>Il n’empêche que Vista a apporté, avec NT6, de nombreuses améliorations sur tous les fronts : gestion native de l’IPv6, l’&lt;abbr lang=&quot;en&quot; title=&quot;User Account Control&quot;&gt;UAC&lt;/abbr&gt;, &lt;abbr lang=&quot;en&quot; title=&quot;Windows Presentation Foundation&quot;&gt;WPF&lt;/abbr&gt; et &lt;abbr lang=&quot;en&quot; title=&quot;Windows Communication Foundation&quot;&gt;WCF&lt;/abbr&gt;, gestion des profils IIS, architecture DotNET, reconnaissance vocale native, création de DVD, <em>versionning</em> de fichiers, chiffrement des données, synchronisation des périphériques, ReadyBoost, outils de réparation au démarrage, contrôle parental, et j’en passe des tout aussi biens.</p>\n<h2 id=\"l-arriv-e-de-7\">L’arrivée de 7</h2>\n<p><img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/02/windows-7-logo.png\" alt=\"Windows 7\"></p>\n<p>En voilà un Windows qu&#39;il a été bien accueilli ! C&#39;est même le premier Windows à l’être. Ses ventes exceptionnelles sont un record absolu pour Microsoft : 100 millions de licences écoulées en 6 mois, 525 millions en deux ans. À titre de comparaison, Windows XP a s&#39;est écoulé à 20 millions d’unités en 6 mois, et 400 millions en 6 ans.</p>\n<p>Pourtant, il n’est <strong>qu&#39;une évolution de Vista</strong>, puisqu&#39;il est essentiellement basé dessus (Noyau NT6.1). Ce n’est en somme qu&#39;un gros patch contenant quelques optimisations et la nouveauté principale : la &quot;SuperBar&quot;, ou la barre des tâches sur laquelle on peut épingler ses programmes. Au rayon des autres ajouts, on peut noter la prise en charge GPS, gestion des périphériques tactiles et de nouveaux raccourcis claviers.</p>\n<p>C&#39;est quand même bien moins fourni que Vista… Normal, puisque celui-ci a déjà fait tout le boulot.</p>\n<h2 id=\"bonjour-windows-8\">Bonjour Windows 8</h2>\n<p><img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/02/windows-8-logo.png\" alt=\"Windows 8\"></p>\n<p>C&#39;est donc naturellement que Windows 7 se devait d’avoir un successeur. À défaut de pouvoir réitérer l’exploit commercial de 7 (en sachant que le marché du PC s&#39;essouffle désormais face aux smartphones et aux tablettes), il s&#39;appuie toujours sur les acquis précédents (Noyau NT6.2 puis 6.3 pour Windows 8.1). On trouve encore quelques nouveautés et optimisations : prise en charge native de l’USB3, des téléviseurs 3D, montage natif des images ISO, interface ruban dans l’explorateur, meilleure gestion des transferts de fichiers, possibilité de rétablir les réglages d’usine, chiffrement des disques, meilleur <em>versionning</em>, gestion plus avancée du multi-écrans, sécurité accrue, nouveau gestionnaire de tâches, optimisation du démarrage, meilleur accès au matériel, synchronisation des paramètres, meilleure utilisation des profils…</p>\n<h3 id=\"et-modernui-\">Et ModernUI.</h3>\n<p>Et ModernUI, oui. Anciennement baptisé Metro, cette interface fortement décriée est sans doute la raison principale du rejet des utilisateurs : &lt;q&gt;C&#39;est plus comme avant !&lt;/q&gt;</p>\n<p>Comme d’habitude, les gens s&#39;empressent de tirer des conclusions hâtives, relayées par des médias dont ce n’est pourtant pas le domaine mais avides de ne pas rater le dernier scandale à la mode ; on peut lire ça et là que le bureau n’existe plus, que Windows 8 est uniquement pensé tactile. Avant même que l’OS ne soit sorti et que quiconque ait pu l’essayer, les jeux sont faits. Avoir une bonne réputation prend des années, une mauvaise prend cinq minutes. La &quot;disparition&quot; du menu démarrer trouble au plus haut point les utilisateurs, son remplacement par ModernUI dérange.</p>\n<p>Comme pour Windows Vista, les troupeaux de réfractaires au moindre changement en font une publicité négative qui cartonne, avec des arguments aussi recherchés que &lt;q&gt;Ouin, on peut pas s&#39;en servir au clavier et à la souris&lt;/q&gt; (Faux), &lt;q&gt;Ouin, il faut 15 clics de plus pour éteindre son ordinateur&lt;/q&gt; (Faux), &lt;q&gt;Ouin il est trop instable&lt;/q&gt; (Faux), et autres déballage de mauvaise foi afin de justifier leur dégoût, comme si le simple fait de dire &quot;je n’aime pas&quot; n’était pas suffisant et qu&#39;il leur fallait prouver qu&#39;ils ont raison de ne pas aimer.</p>\n<p>ModernUI est tout une interface, mais je ne m&#39;étendrais pas dessus ; je m&#39;en tiendrais à sa fonction de menu démarrer, pour des raisons de flemme et de sujet.</p>\n<h2 id=\"les-arguments-d-biles\">Les arguments débiles</h2>\n<p>Je lis tellement de bêtises sur le sujet que je ne peux résister à l’envie d’étaler devant vos yeux ébaubis une liste des arguments fallacieux, des trésors de mauvaise foi et des idées reçues totalement fausses qui reviennent le plus souvent :</p>\n<h3 id=\"-le-menu-d-marrer-disparu-\">&quot;Le menu démarrer à disparu&quot;</h3>\n<p>Non. Non, non, non. Qu&#39;Est-ce que le menu démarrer ? Sous Windows Vista/7, c&#39;est une interface, accessible en cliquant en bas à gauche (par défaut) de l’écran (ou en appuyant sur la touche <code>Windows</code>), qui :</p>\n<ol>\n<li>Liste les applications épinglées par l’utilisateur, afin de les rendre accessibles d’un clic.</li>\n<li>Donne accès à un moteur de recherche global, accessible en cliquant dessus ou en écrivant directement l’objet de sa recherche.</li>\n<li>Donne accès, au moyen d’un clic sur &quot;Tous les programmes&quot;, à la liste des programmes installés sur le PC.</li>\n</ol>\n<p><strong>Et ModernUI, qu&#39;Est-ce que c&#39;est ?</strong> C&#39;est une interface, accessible en cliquant en bas à gauche (par défaut) de l’écran (ou en appuyant sur la touche <code>Windows</code>), qui :</p>\n<ol>\n<li>Liste les applications épinglées par l’utilisateur, afin de les rendre accessibles d’un clic.</li>\n<li>Donne accès à un moteur de recherche global, accessible en cliquant dessus ou en écrivant directement l’objet de sa recherche.</li>\n<li>Donne accès, au moyen d’un clic sur une icône, à la liste des programmes installés sur le PC.</li>\n</ol>\n<p>Ben merde alors, en fait c&#39;est tout pareil ! Et oui, ami lecteur : le menu démarrer n’a pas disparu, ModernUI <strong>EST</strong> le menu démarrer !</p>\n<h3 id=\"-windows-8-n-est-pas-ergonomique-\">&quot;Windows 8 n’est pas ergonomique&quot;</h3>\n<p><em>O, rly</em> ? Pourtant, ce n’est jamais que Windows 7. Exactement pareil, avec un bureau et des icones dessus, une barre des tâches épinglable, l’heure en bas à droite, et des fenêtres qui se baladent. Et si vous mettez ma parole en doute, voici une <a href=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/02/w8-screen.jpg\" title=\"Windows 8 Bureau\">capture d’écran de de mon bureau</a> &lt;small&gt;(en petit, parce que quoi, vous voulez pas regarder mon dossier porno aussi non ?!)&lt;/small&gt;. En quoi est-ce que ça change ? &quot;Les menu en ruban&quot; diront certains. Sauf que, en fait, cet affichage permet de gérer la plupart des options de fenêtres disponible auparavant via <em>&quot;Fichier&quot;</em>,<em> &quot;Édition&quot;</em>, <em>&quot;Affichage&quot;</em>, sans pour autant avoir à ouvrir une multitude de fenêtres différentes. Ça s&#39;appelle donc une amélioration, puisque le gain de temps, par exemple pour afficher les fichiers masqués ou les extensions, passe de cinq clics à deux (oui parce que vous allez le voir, le clic est très important pour le détracteur de Windows 8).</p>\n<p>Peut-être parle-t-on alors de l’interface ModernUI ? Ça tombe bien, le point précédent montrait que l’utilisation &quot;basique&quot; est absolument identique à celle du menu démarrer. Pas davantage de clics, et même moins dans le cas de la liste des programmes puisqu&#39;on n’a pas à ouvrir de sous-dossiers ici. Et comme le réfractaire est de mauvaise foi, il s&#39;acharnera à prouver la contre-intuitivité des applications de ModernUI, qu&#39;il ne va pourtant pas utiliser puisqu&#39;il ne veut qu&#39;un menu démarrer. Mesquin, va !</p>\n<p>C&#39;est cependant le point qui serait le plus critiquable, puisque ModernUI est loin d’être arrivé à maturité…</p>\n<h3 id=\"-windows-8-est-instable-\">&quot;Windows 8 est instable&quot;</h3>\n<p>L’argument de mauvaise foi par excellence, avancé sans réelle recherche (à part &lt;q&gt;Mon ordi a planté, c&#39;est la preuve !&lt;/q&gt;) et qui contredit les <em>benchs</em> à ce sujet. XP a été décrié pour son instabilité notoire jusqu&#39;au premier (voire second) Service Pack. Vista a lui aussi connu quelques problèmes. Windows 7 était un modèle de stabilité, basé sur la solidité acquise par Vista. 8 s&#39;appuie sur 7. Rien de plus à dire…</p>\n<h3 id=\"-windows-8-est-bourr-d-incompatibilit-s-\">&quot;Windows 8 est bourré d’incompatibilités&quot;</h3>\n<p>Comme je l’ai déjà évoqué tantôt, Windows Vista, 7 et 8 contiennent tout un tas de pilotes et d’instructions afin de garantir une compatibilité maximale. Le reste, c&#39;est aux constructeurs / développeurs de le faire. Du reste, ce qui est compatible Windows 7 est <em>foncièrement</em>  compatible Windows 8 (Même noyau !) ; si vous rencontrez une incompatibilité quelconque, il faut creuser pourquoi au lieu d’incriminer l’OS. C&#39;est probablement la faute d’un drivers que vous auriez oublié d’installer…</p>\n<p>À titre d’exemple (bien qu&#39;une seule personne ne soit pas représentative, j’en conviens), depuis septembre 2011 (Date de sortie de la version <em>Developer Preview</em>), je n’ai rencontré <strong>aucune</strong> (j’insiste.) incompatibilité avec mes nombreux logiciels que sont la suite quasi-complète d’Adobe (Photoshop, InDesign, Illustrator, Dreamweaver, Premiere Pro, Captivate, After Effects…), 3D Studio Max, Zbrush, WinSCP, Visual Studio, uWamp, SmartGit, Reaper, Guitar Pro, Pod Farm, la suite Office (Word, Excel, Powerpoint, Outlook) ou la majorité de mes quelques 90 jeux sur Steam. AUCUN.</p>\n<p>&lt;div class=&quot;note note--info&quot;&gt;Je parle bien ici de compatibilité logicielle. Les drivers (ou pilotes), sont la jonction entre le matériel (langage machine) et les applications qui tournent sur l’OS ; les deux ne sont pas de même niveau, et les seconds se reposent sur les premiers. C&#39;est pourquoi il est important que les constructeurs travaillent au développement de drivers pour chaque système ; c&#39;est aussi pourquoi certaines applications peuvent ne pas fonctionner, dépendantes d’une ressource de plus bas niveau.&lt;/div&gt;\n\n</p>\n<h3 id=\"-un-windows-sur-deux-est-mauvais-\">&quot;Un Windows sur deux est mauvais&quot;</h3>\n<p>Un vieux <em>meme</em> débile d’internet, récurrent, éculé, et faux. Faux car tout d’abord, il &quot;oublie&quot; des versions de Windows comme ça l’arrange pour que le petit tableau tienne la route. Faux ensuite parce que, comme je me suis tué à l’expliqué en début de ce long article, si 7 est un bon OS, Vista et 8 aussi puisque ce sont foncièrement les mêmes.</p>\n<h3 id=\"-ils-sont-d-j-en-train-de-travailler-sur-windows-9-preuve-qu-ils-veulent-oublier-8-rapidement\">&quot;Ils sont déjà en train de travailler sur Windows 9, preuve qu&#39;ils veulent oublier 8 rapidement</h3>\n<p>N’importe quoi. Tous les Windows, à l’exception de Windows XP qui est resté cinq ans sans successeur, sont sortis avec deux à trois ans d’écart.</p>\n<h3 id=\"-le-march-du-pc-est-en-chute-libre-depuis-la-sortie-de-8-c-est-la-preuve-\">&quot;Le marché du PC est en chute libre depuis la sortie de 8, c&#39;est la preuve !&quot;</h3>\n<p>Non, c&#39;est la preuve que le marché des tablettes a trouvé sa cible. Les bonnes gens ont claqué 400 à 600 boules pour un smartphone qui leur permet de jouer à des petits jeux sans avoir à installer les saletés vérolées de Zinga. Ils peuvent avoir accès à leurs mails, à Facebook, aux images rigolotes, ils peuvent communiquer librement avec Skype et les SMS/MMS qui sont devenus gratuits et illimités, ils ont la vidéoconférence dessus et plus d’outils qu&#39;ils n’en utiliseront jamais pour prendre, traiter et partager leurs photos et vidéos. Les plus <em>pimp</em> d’entre eux ont même acheté une tablette à 600 baluches pour faire la même chose sur un écran plus grand. Dans ce cadre là, sachant que pour une grande majorité leur utilisation d’un PC se limite à ces utilisations, au nom de quoi est-ce qu&#39;ils iraient jeter 700€ supplémentaires pour un ordinateur ?</p>\n<p>Le marché du PC perd du terrain face au mobile ; ça ne veut pas dire que les ventes chutent mais simplement que les parts de marché changent. Si en 2010 il s&#39;est vendu 250 millions de PC (chiffres au hasard !) contre 10 millions de tablettes, et qu&#39;en 2012 il s&#39;est vendu 500 millions de PC et 300 millions de tablettes, la part de marché du PC a fortement reculé ; pour autant, les ventes ont grimpé quand même. C&#39;est dingue ce qu&#39;on peut faire avec des pourcentages (et c&#39;est tout aussi dingue ce que les journalistes arrivent à leur faire dire !).</p>\n<p>Ceux qui privilégient le bon vieil ordinateur sont ceux qui en ont un réel besoin (travail, jeux…) et ceux qui veulent rester dessus par confort ou habitude. Et pour ceux qui veulent de l’entre-deux sur un peu tout, il y a les smartphones un peu tablettes (les phablettes), et les tablettes un peu PC (hybrides divers) ; deux tableaux sur lesquels joue Microsoft avec Windows Phone 8, Windows RT, et Windows 8 (bientôt unifiés).</p>\n<p>Tout ça en sachant que le marché du PC (j’englobe les Macs avec) a eu un gros boum récemment, et que beaucoup de monde en possède donc encore un presque neuf, ou à défaut, qui marche encore très bien ; là encore quel besoin d’en racheter un maintenant ? C&#39;est couillon à dire, mais si aujourd’hui même chaque personne dans le monde achetait un ordinateur, ledit marché du PC serait en chute libre demain et pour au moins plusieurs mois. C&#39;est juste mathématique.</p>\n<p>Alors que vient foutre Windows 8 là-dedans ? OUI, C&#39;EST ÇA : rien du tout.</p>\n<h3 id=\"-ils-l-ont-dit-la-t-l-microsoft-va-mal-\">&quot;Ils l’ont dit à la télé, Microsoft va mal !&quot;</h3>\n<p>Passer de 13 milliards de chiffre d’affaires à 70 milliards en moins de dix ans… Je voudrais bien aller aussi mal, et de nombreuses entreprises aussi !</p>\n<h3 id=\"-il-a-t-pens-pour-le-tactile-alors-c-est-la-plaie-avec-une-souris-\">&quot;Il a été pensé pour le tactile, alors c&#39;est la plaie avec une souris&quot;</h3>\n<p>Sérieusement ? Si taper sur un bon carré bien <em>fat</em> avec vos gros doigts boudinés et graisseux est possible et facile alors comment, par Jupiter et ses roubignoles, serait-il possible de ne pas réussir à cliquer dessus avec le pointeur ultra-précis de votre foutue souris <em>gamer</em> laser à 3000 dpi ?! J’attends encore des exemples concrets d’utilisation difficile, parce que je n’en ai encore rencontré aucun. Jamais quelqu&#39;un qui m&#39;a sorti cet &quot;argument&quot; n’a été fichu de me donner le moindre petit cas complexe d’utilisation à me mettre sous la dent.</p>\n<p>Inadapté, ça se discute. Difficile, non.</p>\n<h3 id=\"-il-se-vend-mal-c-est-la-preuve-\">&quot;Il se vend mal, c&#39;est la preuve !&quot;</h3>\n<p>Jusqu&#39;à maintenant et sur une même échelle de temps, il se vend mieux que Windows XP et Windows Vista en leur temps. Encore une fois, 7 est un record et un cas d’école, pourtant 8 n’est pas loin derrière : 240 Millions de licences écoulées en 12 mois pour le premier, 200 millions en 15 mois pour le second. Un échec cuisant, en effet…</p>\n<h3 id=\"-il-faut-plus-de-temps-clics-pour-faire-des-choses-simples-\">&quot;Il faut plus de temps/clics pour faire des choses simples&quot;</h3>\n<p>Mon préféré. C&#39;est bien connu, les feignasses qui passent onze heures par jour sur Facebook sont très économes du clic, c&#39;est tellement important de gagner une millisecondes et d’économiser un mouvement de doigt ! Non, ne riez pas : un clic perdu pour faire une tâche, c&#39;est un clic qui n’est pas utilisé pour chercher du porno ou du lolcat ! C&#39;est über-important !</p>\n<p>Je pourrais en rajouter davantage pour montrer à quel point la réflexion est stupide, mais soit. Observons &lt;del&gt;deux papillons&lt;/del&gt; les procédures standards sous Windows 7, comptons le nombre d’actions et de clics, et comparons avec Windows 8.</p>\n<ul>\n<li>Lancer un programme du menu démarrer.</li>\n</ul>\n<p><strong>Windows 7 :</strong></p>\n<ol>\n<li>Amener son curseur en bas à gauche de l’écran</li>\n<li>Cliquer</li>\n<li>Diriger sa souris vers un programme épinglé</li>\n<li><p>Cliquer\n<strong>Windows 8 :</strong></p>\n</li>\n<li><p>Amener son curseur en bas à gauche de l’écran</p>\n</li>\n<li>Cliquer</li>\n<li>Diriger sa souris vers un programme épinglé</li>\n<li>Cliquer\n<strong>Verdict :</strong> Stricte égalité (je déconnais pas quand je disais que c&#39;était pareil).</li>\n</ol>\n<p>NB: Dans les deux cas, on peut aussi appuyer sur la touche &lt;kbd&gt;Windows&lt;/kbd&gt; et enlever un clic et un déplacement de souris !</p>\n<ul>\n<li>Lancer un programme dans la liste des programmes installés\n<strong>Windows 7 :</strong></li>\n</ul>\n<ol>\n<li>Amener son curseur en bas à gauche de l’écran</li>\n<li>Cliquer</li>\n<li>Diriger sa souris vers &quot;Tous les programmes&quot;</li>\n<li>Cliquer</li>\n<li>Scroller dans la liste des dossiers pour trouver le dossier</li>\n<li>Déplacer le curseur vers le dossier du programme</li>\n<li>Cliquer pour ouvrir le dossier</li>\n<li>Déplacer le curseur sur l’icone du programme</li>\n<li><p>Cliquer sur le programme\n<strong>Windows 8 :</strong></p>\n</li>\n<li><p>Amener son curseur en bas à gauche de l’écran</p>\n</li>\n<li>Cliquer</li>\n<li>Diriger sa souris vers &quot;Tous les programmes&quot;</li>\n<li>Cliquer</li>\n<li>Déplacer sa souris vers le programme</li>\n<li>Cliquer sur le programme\n<strong>Verdict :</strong> Gros avantage Windows 8.</li>\n</ol>\n<ul>\n<li>Éteindre le PC (oui, il y a des gens qui me soutiennent que c&#39;est plus compliqué sur W8 !)\n<strong>Windows 7 :</strong></li>\n</ul>\n<ol>\n<li><p>Appuyer sur le bouton Power\n<strong>Windows 8 :</strong></p>\n</li>\n<li><p>Appuyer sur le bouton Power\n<strong>Verdict :</strong> <em>Are you fucking kiddin’ me ?!</em></p>\n</li>\n</ol>\n<ul>\n<li>Redémarrer le PC (ou éteindre via le menu, mettre en veille, etc)\n<strong>Windows 7 :</strong></li>\n</ul>\n<ol>\n<li>Amener son curseur en bas à gauche de l’écran</li>\n<li>Cliquer</li>\n<li>Diriger sa souris vers la petite flèche à coté de &quot;Arrêter&quot;</li>\n<li>Cliquer</li>\n<li>Déplacer sa souris vers la fenêtre de choix</li>\n<li><p>Cliquer sur le choix\n<strong>Windows 8 :</strong></p>\n</li>\n<li><p>Amener son curseur en bas à gauche de l’écran</p>\n</li>\n<li>Cliquer avec le bouton droit (OMG, tant de difficulté dans ta vie !) pour ouvrir un menu contextuel</li>\n<li>Diriger sa souris vers &quot;Arrêter ou se déconnecter&quot;</li>\n<li>Cliquer</li>\n<li>Déplacer sa souris vers le lien du choix</li>\n<li>Cliquer sur le choix\n<strong>Verdict :</strong> Stricte égalité</li>\n</ol>\n<p>Bon, oùkèlé la grosse perte de temps et de clic ?</p>\n<h3 id=\"-on-est-oblig-s-d-avoir-un-compte-microsoft-\">&quot;On est obligés d’avoir un compte Microsoft&quot;</h3>\n<p>Non. On peut utiliser n’importe quel compte, même Yahoo, Gmail ou autre. Le compte Microsoft n’a d’intérêt que pour utiliser le store Microsoft de ModernUI.</p>\n<h3 id=\"-il-faut-obligatoirement-entrer-un-mot-de-passe-\">&quot;Il faut obligatoirement entrer un mot de passe&quot;</h3>\n<p>Inexact. Dans le cas d’un compte local, on peut se connecter sans aucun mot de passe. Dans le cas d’un compte synchronisé, on peut utiliser au choix un mot de passe, un code pin, ou une image-code.</p>\n<h3 id=\"-il-y-a-plein-de-sujets-de-gens-qui-ont-des-probl-mes-avec-sur-les-forums-\">&quot;Il y a plein de sujets de gens qui ont des problèmes avec sur les forums&quot;</h3>\n<p>Ça, c&#39;est ce que j’appelle l’effet Iceberg. Il y a énormément plus de sujets concernant des problèmes avec Windows 7 puisque celui-ci est présent depuis plus longtemps. Donc la plupart des gens qui ont un problème dessus vont trouver une réponse existante à leur question ou leur problème. Il y a encore régulièrement des sujets de problèmes avec d’autres OS, du reste. Mais c&#39;est une partie que les gens occultent souvent.</p>\n<p><img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/02/effeticeberg.jpg\" alt=\"Effet Iceberg\"></p>\n<p>De plus, fait intéressant, quand un utilisateur sous Windows 7 expose un problème quelconque, les autres cherchent des causes probables (défaillance matérielle, drivers, etc.) ; quand un utilisateur sous Windows 8 expose un problème quelconque, les autres mettent directement en cause l’OS, sans chercher de causes. Étrange, hein ?</p>\n<p>&lt;div class=&quot;note note--info&quot;&gt;<strong>Edit du 8 février 2014</strong> L’un de mes YouTubers préférés, Bruce Benamran (<a href=\"https://www.youtube.com/channel/UCcziTK2NKeWtWQ6kB5tmQ8Q\" title=\"YouTube\">sa chaine &quot;e-penser&quot;</a>), a publié récemment une vidéo sur <em>l’effet cigogne</em> (ou <em>post hoc ergo propter hoc</em> pour ceux qui aiment se la péter dans diverses langues mortes dont tout le monde se fout), qui décrit assez bien le problème. Outre la vidéo (que je vous mets ci-dessous), j’en profite pour vous recommander sa chaine, elle déboite les rotules à mémé.&lt;/div&gt;\n\n</p>\n<p>&lt;div class=&quot;video&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/lg2hFq9RlYM?rel=0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;\n\n</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Entendons-nous bien, il n’est pas ici question de vanter les mérites de Windows 8 au profit d’un autre OS qui vous conviendrait très bien, que ce soit un Windows, OSX ou une distribution Linux. Si vous êtes satisfait de votre Windows 7, restez-y : il est très bien, tout à fait valable, moderne, puissant et tout ce qu&#39;on veut. Windows 8 est une évolution intéressante, pas une révolution.</p>\n<p>Non, le but est surtout de dire aux gens (enfin, aux deux mecs qui passaient là par hasard) d’arrêter de vouloir le défoncer à tout prix. De montrer à ceux qui le conspuent qu&#39;ils se basent sur du vent et que s&#39;ils avaient fait l’effort d’arrêter leur petit caprice pour tester réellement l’OS, ils ne cracheraient pas dessus à ce point. La preuve la plus flagrante se trouve sur les forums d’informatique : ceux qui ne l’aiment pas sont principalement ceux qui ne l’ont pas ; les autres s&#39;en sont - en très grande majorité - très bien accommodés et le recommandent à tous.</p>\n<p>Pour finir, une petite remarque sur l’accueil des nouvelles versions du système de Microsoft : chaque nouveau Windows est décrié. Windows 7 a été la seule exception depuis Windows 95. À chaque cycle, la rengaine est la même :</p>\n<ul>\n<li><strong>Sortie de Windows XP</strong> → &quot;Bouuh, interface Fisher-Price, rendez-nous les fenêtres grises carrées et le menu démarrer comme 98 !&quot;</li>\n<li><strong>Sortie de Windows Vista</strong> → &quot;Bouuh, interface Bling-bling, rendez-nous les fenêtres bleues et le menu démarrer comme XP !&quot;</li>\n<li><strong>Sortie de Windows 8</strong> → &quot;Bouuh, interface Fisher-Price, rendez-nous les fenêtres transparentes et le menu démarrer comme Vista/7 !&quot;</li>\n</ul>\n<blockquote>\n<p>Ce que les gens détestent de prime abord, ils le défendront bec et ongles lorsqu&#39;on voudra le leur enlever.</p>\n<p>&lt;footer&gt;Ouais, c&#39;est de moi.&lt;/footer&gt;\n\n</p>\n</blockquote>\n<hr>\n<h3 id=\"il-en-parle-aussi\">Il en parle aussi</h3>\n<p>&lt;p&gt;Je viens de trouver grâce à un internaute de <strong>Clubic</strong> une autre diatribe du même acabit, que je note ici pour l’avoir sous la main, et aussi pour vous la faire partager : <a href=\"http://www.geekmag.fr/windows-8-mes-impressions-apres-quelques-mois-dutilisation/\" title=\"GeekMag\">&lt;q&gt;Windows 8 : mes impressions après quelques mois d’utilisation&lt;/q&gt;</a>. <em>Haters gonna hate</em>.</p>\n"},{"title":"Non, vous ne faites pas du responsive !","author":"Emmanuel B.","date":"2014-03-04 06:38:28","tags":["html/css"],"categories":["Diatribes"],"template":"post.vue","basename":"e-faites-pas-du-responsive","content":"<p>S&#39;il vous est un jour arrivé de dire (ou de penser très fort) : &lt;q&gt;Moi, mon site est tout en % pour être responsive !&lt;/q&gt;, sachez qu&#39;il se peut que je vous souhaite du mal. Bon allez, peut-être pas jusque-là ; mais quand même, vous vous fourrez profondément les deux pouces dans chaque mirette.</p>\n<p>Alors le responsive, c&#39;est quoi ?</p>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"sch-ma-simple\">Schéma simple</h2>\n<p>Je sais qu&#39;un joli dessin est souvent plus éloquent qu&#39;un long discours, cependant j’ai vachement la flemme de dégainer Photoshop pour vous faire une belle vignette explicative. La tartine n’étant pas mon fort (Comme dirait Maxime), je vous le résume avec ce sens de la concision, ce don du raccourci et ce parti-pris de condensé qui sont les plus beaux fleurons de mon style et qui font écrire aux critiques des choses tellement élogieuses sur mon compte que je ne puis manger désormais que dans de la vaisselle d’argent. Adonc (remarquez en sus mon amour pour les tournures de phrase désuètes), voici un schéma bien clair — quoiqu&#39;un peu simpliste — par écrit :</p>\n<ul>\n<li><strong>Responsive</strong> = Adapté à différents supports</li>\n<li><strong>Fluide</strong> = Adapté à différentes tailles d’écran d’un même support</li>\n<li><strong>Pourcentage</strong> = N’a basiquement rien à voir avec la choucroute</li>\n</ul>\n<h2 id=\"le-probl-me-du-pourcentage\">Le problème du pourcentage</h2>\n<p>Je commence par la parenthèse de cet article, à savoir la question du pourcentage dans l’intégration d’un site. Honnêtement, c&#39;est bancal, hasardeux. On ne s&#39;en sert que dans des cas spécifiques, par exemple pour obtenir des colonnes ou grilles fluides comme dans <a href=\"http://getbootstrap.com/\" title=\"Bootstrap 3\">Bootstrap</a>, et quelques autres points.</p>\n<p>Si vous êtes un(e) adepte du <code>width: 100%;</code>, je vous renvoie à l’excellent article de <strong>Raphaël Goetter</strong>, &lt;q&gt;<a href=\"http://blog.goetter.fr/post/13556565063/width-100-tu-es-le-mal\" title=\"La tête dans le flux !\">Width 100%, tu es le mal</a>&lt;/q&gt;, qui vous expliquera non-seulement le problème inhérent à cette déclaration pourrie, mais également <strong>comment vous en passer au mieux</strong>.</p>\n<h2 id=\"fluide-dis-tu-\">Fluide, dis-tu ?</h2>\n<p>Lorsqu&#39;on fait un site fluide (aussi appelé &quot;liquide&quot; dans certains cas), on fait en sorte que l’interface s&#39;étire, s&#39;adapte en fonction de l’écran du visiteur, afin que l’affichage soit correct aussi bien sur un Netbook riquiqui de 1024 pixels de large que sur mon <strong>grand et beau</strong> 27 pouces. Et quand je dis &quot;correct&quot;, j’entends par là que ce soit bien pensé ! Un site de 2560 pixels d’envergure est purement et totalement illisible et contraindra le malheureux visiteur à effectuer de grands mouvement rotatoires de sa partie têtale et de vous maudire deux-cent fois à chaque fois qu&#39;il perd sa ligne de lecture.</p>\n<h3 id=\"foutez-la-paix-aux-pourcentages\">Foutez la paix aux pourcentages</h3>\n<p>Comme je le disais, pour faire un site qui s&#39;adapte en largeur, on se passe très bien des valeurs en pourcentages (jusqu&#39;à un certain besoin, certes). Les valeur en pixels s&#39;en sortent très bien (L’ami <a href=\"http://clement-galidie.fr/\" title=\"Clément Galidie\">Clément Galidie</a> renchérira — à raison — que les valeurs en <em>em</em> aussi). Penchez-vous sur des propriétés comme <code>min-width</code> et <code>max-width</code> et sur mon autre article &lt;q&gt;<a href=\"http://www.emmanuelbeziat.com/blog/aligner-trois-colonnes-proprement/\">Aligner trois colonnes proprement</a>&lt;/q&gt; pour vous en convaincre.</p>\n<h2 id=\"le-responsive-c-est-quoi-\">Le responsive, c&#39;est quoi ?</h2>\n<p>D’après la définition donnée plus tôt, le <strong>responsive design</strong> très à la mode ne consiste pas seulement à faire en sorte que votre site s&#39;étire docilement. Quand je parle d’adapter un site à différent supports, il s&#39;agit de le faire <em>vraiment</em>. De s&#39;assurer que la navigation soit possible avec un doigt si on est sur du tactile, sans risquer de cliquer sur trois boutons en même temps ; ou que les boutons de la télécommande permettent de parcourir le site sans difficulté. Faire en sorte que le contenu non-pertinent pour un smartphone soit caché ou supprimé, que les chargements soient optimisés pour des connexions lentes ou limitées de type 3G. Faire en sorte que le tout soit parfaitement utilisable sur le lecteur d’écran d’un visiteur malvoyant.</p>\n<p>Certes, parmi les techniques les plus simples et basiques pour des sites responsive, on trouve les media-queries qui sont très pratiques. Et souvent, on couple ça avec une interface fluide. Mais ce n’est qu&#39;un début.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Maintenant que vous savez de quoi il retourne, vous n’avez plus d’excuse pour sortir des énormités liées au pourcentages et au responsive, et pas davantage pour coder à la truelle. Non mais !</p>\n"},{"title":"Les découvertes du web #2","author":"Emmanuel B.","date":"2014-03-05 10:35:12","tags":["decouvertes"],"categories":["Veille"],"template":"post.vue","basename":"rtes-du-web-2","content":"<p>Aujourd’hui, deux petits liens bien pratiques !</p>\n<h3 id=\"-dois-je-utiliser-\">&quot;Dois-je utiliser ?&quot;</h3>\n<p>Pour tous vos projets web, pour tous vos clients aux idées farfelues, voici un condensé des mauvaises pratiques à la mode, avec des arguments imparables pour dire <strong>non</strong> : <a href=\"http://www.doisjeutiliser.fr/\">DoisJeUtiliser.fr</a></p>\n<h3 id=\"ridiculement-responsive\">Ridiculement responsive</h3>\n<p>De bien joli boutons qui changent de taille et de forme en fonction du contenu : <a href=\"http://kurtnoble.com/labs/rrssb/\" title=\"Kurt Noble\">Ridiculously Responsive Social Sharing Buttons</a></p>\n<p>C&#39;est tout !</p>\n"},{"title":"Site épinglé avec Internet Explorer","author":"Emmanuel B.","date":"2014-03-12 00:20:28","tags":["html/css","javascript","seo"],"categories":["Tutoriels"],"template":"post.vue","basename":"e-avec-internet-explorer","content":"<p>Avec Windows 7 est apparue la possibilité d’épingler des programmes dans la barre des tâches. Internet Explorer (depuis la version 9) propose une fonctionnalité d’épinglage avancé : il suffit de déplacer l’onglet d’une page vers la barre des tâches pour y trouver de nouvelles actions possibles. Ces fonctionnalités se paramètrent sur votre propre site, nous allons donc voir comment.</p>\n<p>&lt;!--more--&gt;\n</p>\n<p>&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2013/07/sites-epingles.jpg\" alt=\"sites-epingles\">&lt;figcaption&gt;Fonctionnalités des sites épinglés&lt;/figcaption&gt;&lt;/figure&gt;\n\n</p>\n<p>Pour la première partie, un minimum de connaissances en HTML est requis. Les parties HTML seront suffisamment détaillées pour que les moins expérimentés s&#39;y retrouvent.</p>\n<p>Pour la seconde partie, facultative, mais non moins intéressante, vous aurez également besoin de bonnes connaissances en Javascript. Ces parties sont réservées à des développeurs plus avancés, et de fait seront plus indicatives qu&#39;explicatives. Il vous faudra donc être familier avec les fonctions et les variables.</p>\n<p>Allons-y.</p>\n<h2 id=\"comment-pingle-t-on-un-site-\">Comment épingle-t-on un site ?</h2>\n<p>Il existe plusieurs façons pour un utilisateur d’épingler un site.</p>\n<p>Dans Windows 7 et 8 (en mode bureau), il suffit de faire glisser l’onglet du site ou le favicon (icône du site) vers la barre des tâches pour que le site s&#39;épingle seul. Il est également possible d’utiliser le menu Outils (<code>Alt</code> + <code>o</code>), puis de sélectionner &quot;<em>Ajouter le site au menu démarrer</em>&quot;, mais le raccourci se place dans le menu et non sur la barre des tâches.</p>\n<p>&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2013/07/epinglage.jpg\" alt=\"épinglage\">&lt;figcaption&gt;Ajouter un site à l’écran d’accueil, sous Windows 8&lt;/figcaption&gt;&lt;/figure&gt;\n\n</p>\n<p>Dans Windows 8 (en mode ModernUI), il y a un bouton &quot;<em>Épingler à l’écran d’accueil</em>&quot; dans la barre de navigation en bas de la fenêtre d’Internet Explorer.</p>\n<p>Il est également possible de créer des outils d’épinglage (boutons, barres), comme nous le verrons par la suite.</p>\n<h3 id=\"les-modifications-d-interface\">Les modifications d’interface</h3>\n<p>Lorsqu&#39;un site est lancé depuis un raccourci épinglé, l’interface change légèrement par rapport à une fenêtre normale d’Internet Explorer. Le bouton accueil à droite disparaît, l’icône du site est affichée à gauche des boutons de navigation, et ceux-ci adoptent une couleur différente.</p>\n<p>&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2013/07/exemple-site-epingle.jpg\" alt=\"Un exemple de site épinglé\">&lt;figcaption&gt;Un exemple de site épinglé&lt;/figcaption&gt;&lt;/figure&gt;\n\n</p>\n<h3 id=\"la-barre-des-t-ches-mais-pas-seulement-\">La barre des tâches, mais pas seulement !</h3>\n<p>Il existe également une petite subtilité : si vous glissez le site non pas sur la barre des tâches mais sur le bouton du menu Démarrer (uniquement pour Windows 7 donc), votre site et ses raccourcis apparaîtront dans celui-ci.</p>\n<p>&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2013/07/menu-demarrer.jpg\" alt=\"epinglage menu démarrer\">&lt;figcaption&gt;On peut aussi épingler au menu démarrer !&lt;/figcaption&gt;&lt;/figure&gt;\n\n</p>\n<p>La théorie étant vue, place à l’action.</p>\n<h2 id=\"pr-parer-le-terrain\">Préparer le terrain</h2>\n<p>Il faut savoir que n’importe quel site peut être épinglé à la barre de tâche, il n’y a rien à faire pour rendre un site épinglable ou non. Ce que nous allons faire tout au long de ce tutoriel, c&#39;est <strong>personnaliser cet épinglage</strong> ; pour commencer, nous allons voir quelques informations de personnalisation de base à donner au site par le biais des métadonnées.</p>\n<h3 id=\"les-m-tadonn-es-d-installation\">Les métadonnées d’installation</h3>\n<p>Ces éléments permettent de définir plusieurs paramètres qui seront enregistrés lors de l’épinglage du site, et donc de la création du raccourci. Ce sont des éléments facultatifs, mais recommandés.</p>\n<p>&lt;div class=&quot;note note--important&quot;&gt;Il est important de comprendre que ces valeurs ne seront utilisées qu&#39;à l’épinglage. Si vous modifiez ces données après que vous ou un utilisateur ayez épinglé le site, les modifications ne seront pas prises en comptes. Il faudra réépingler le site pour qu&#39;une nouvelle &quot;installation&quot; se crée avec ces nouveaux paramètres.&lt;/div&gt;\n\n</p>\n<h4 id=\"application-name\">application-name</h4>\n<p>La première chose que l’on pourrait vouloir faire, c&#39;est modifier le nom affiché dans la fenêtre d’information, qui apparaît lors du clic droit sur l’icône d’un site épinglé. En effet, par défaut il sera affiché le contenu de la balise <code>&lt;title&gt;</code> du document lié.</p>\n<p>Ajoutons donc une métadonnée afin de choisir nous-mêmes ce qui sera affiché par le lien de base :</p>\n<p>&lt;meta name=&quot;application-name&quot; content=&quot;Un beau site épinglable&quot;&gt;```</p>\n<p>Le résultat est immédiat, le nom du lien vers le site est transformé selon nos souhaits.</p>\n<h4 id=\"msapplication-tooltip\">msapplication-tooltip</h4>\n<p>Il est également possible d’ajouter une infobulle qui apparaîtra lors du survol de l’icône.</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-tooltip&quot; content=&quot;Cliquez pour vous rendre sur un magnifique site !&quot;&gt;\n</code></pre>\n<h4 id=\"msapplication-starturl\">msapplication-starturl</h4>\n<p>Il faut savoir que, par défaut, la page qui s&#39;ouvrira lorsqu&#39;un utilisateur cliquera sur le bouton du site épinglé sera celle qu&#39;il visitait au moment où il l’a épinglé. S&#39;il était sur une page obscure du fin fond de votre site, c&#39;est cette page qu&#39;il verra chaque fois qu&#39;il ouvrira votre site par le biais de l’icône épinglée.</p>\n<p>Pour choisir vous-même quelle URL sera lancée au moment de l’ouverture, vous pouvez utiliser ce code :</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-starturl&quot; content=&quot;./&quot;&gt;\n</code></pre>\n<p>Ici, on demande au site de toujours s&#39;ouvrir à la racine (l’index). On pourrait mettre n’importe quelle adresse, soit absolue (de forme <a href=\"http://www.monsite.com\">http://www.monsite.com</a>), soit relative à la page en cours (de forme /test.html).</p>\n<p>&lt;div class=&quot;note note--info&quot;&gt;Seuls les protocoles HTTP et HTTPS sont autorisés.&lt;/div&gt;\n\n</p>\n<h4 id=\"msapplication-window\">msapplication-window</h4>\n<p>Par défaut, lors de la première ouverture d’un site épinglé, la fenêtre ouverte aura une taille de 800×600 pixels. Par la suite, la taille conservée sera celle qu&#39;aura décidé l’utilisateur en redimensionnant ladite fenêtre.</p>\n<p>Cependant, il peut être judicieux de vouloir faire en sorte que le premier affichage soit plus grand. Et c&#39;est possible avec cette balise meta :</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-window&quot; content=&quot;width=1024;height=768&quot;&gt;\n</code></pre>\n<p><code>height</code> représente bien sûr la hauteur, et <code>width</code> la largeur.</p>\n<h3 id=\"les-m-tadonn-es-d-ex-cution\">Les métadonnées d’exécution</h3>\n<p>Ces paramètres sont lus à chaque fois que le site épinglé est ouvert. Les données peuvent donc être facilement mises à jour.</p>\n<h4 id=\"msapplication-navbutton-color\">msapplication-navbutton-color</h4>\n<p>Comme je le disais plus tôt, lorsqu&#39;un site est lancé depuis un raccourci épinglé (on parle de mode site), l’interface est légèrement modifiée par rapport au site ouvert normalement. Par exemple, les boutons précédents et suivants adoptent une couleur adaptée au site ; par défaut, Internet Explorer choisit cette couleur parmi les dominantes principales du site.</p>\n<p>Là encore, vous pouvez choisir vous-même cette couleur :</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-navbutton-color&quot; content=&quot;#c80000&quot;&gt;\n</code></pre>\n<h4 id=\"msapplication-task\">msapplication-task</h4>\n<p>Grâce à cette balise, vous pouvez ajouter des liens dans la liste des Tâches. Ce sera l’objet de la partie suivante de ce tutoriel.</p>\n<h4 id=\"msapplication-task-separator\">msapplication-task-separator</h4>\n<p>Cet élément permet de créer une ligne de séparation entre deux éléments de la liste des Tâches. La valeur de content est facultative.</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-task-separator&quot; content=&quot;&quot;&gt;\n</code></pre>\n<h3 id=\"quelques-exemples\">Quelques exemples</h3>\n<p>Saviez-vous que de nombreux sites utilisent déjà ces fonctionnalités ? Voici de petits exemples…</p>\n<h4 id=\"facebook\">Facebook</h4>\n<pre><code class=\"html\">&lt;meta name=&quot;application-name&quot; content=&quot;Facebook&quot; /&gt;\n&lt;meta name=&quot;msapplication-tooltip&quot; content=&quot;Start the Facebook App&quot; /&gt;\n&lt;meta name=&quot;msapplication-starturl&quot; content=&quot;/&quot; /&gt;\n&lt;meta name=&quot;msapplication-window&quot; content=&quot;width=800;height=600&quot; /&gt;\n</code></pre>\n<h4 id=\"bing\">Bing</h4>\n<pre><code class=\"html\">&lt;meta content=&quot;Bing&quot; name=&quot;application-name&quot; /&gt;\n&lt;meta content=&quot;Bing&quot; name=&quot;msapplication-tooltip&quot; /&gt;\n&lt;meta content=&quot;width=1024;height=768&quot; name=&quot;msapplication-window&quot; /&gt;\n&lt;meta content=&quot;/&quot; name=&quot;msapplication-starturl&quot; /&gt;\n</code></pre>\n<h4 id=\"twitter\">Twitter</h4>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-TileImage&quot; content=&quot;//abs.twimg.com/favicons/win8-tile-144.png&quot;&gt;\n&lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#00aced&quot;&gt;\n</code></pre>\n<p>&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2013/07/exemple-bing.jpg\" alt=\"exemple-bing\">&lt;figcaption&gt;L’exemple de Bing&lt;/figcaption&gt;&lt;/figure&gt;\n\n</p>\n<h2 id=\"liste-de-raccourcis-statiques-t-ches-\">Liste de raccourcis statiques (tâches)</h2>\n<p>&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2013/07/taches-fb.jpg\" alt=\"taches facebook\">&lt;figcaption&gt;Exemple de tâches d’un site connu&lt;/figcaption&gt;&lt;/figure&gt;\n\n</p>\n<p>Le plus simple pour commencer, est de pouvoir ajouter des liens statiques, appelés &quot;tâches&quot; (jumplists en anglais). Ces liens ont pour but de rediriger vers des pages pérennes de votre site.</p>\n<p>Les tâches de base (statiques) sont définies par des balises de métadonnées (meta). Vous pouvez créer jusqu&#39;à cinq tâches, qui apparaîtront dans la catégorie &quot;Tâches&quot;.</p>\n<p>Voici la balise en question, qui se définit par la valeur de name &quot;msapplication-task&quot;.</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-task&quot; content=&quot;&quot;&gt;\n</code></pre>\n<p>Les valeurs possibles de content sont au nombre de quatre, et doivent être séparées par un point-virgule. Voici un tableau des différentes valeurs possibles et de leur utilité :</p>\n<p>&lt;table&gt;&lt;tr&gt;&lt;th&gt;Nom&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;name&lt;/td&gt;&lt;td&gt;Nom de la tâche, qui apparaît dans la liste.\n&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td class=&quot;nowrap&quot;&gt;action-uri&lt;/td&gt;&lt;td&gt;L’adresse qui sera ouverte lorsque l’élément sera cliqué, et qui peut être absolue ou relative.&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td class=&quot;nowrap&quot;&gt;icon-uri&lt;/td&gt;&lt;td&gt;Une icône (image ou fichier icône) qui sera affichée juste en face du lien. L’adresse de l’icône peut également être absolue ou relative.&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td class=&quot;nowrap&quot;&gt;window-type&lt;/td&gt;&lt;td&gt;Permet de définir le mode d’ouverture de la page liée.\n\n<em>   tab (valeur par défaut) : nouvel onglet dans la fenêtre actuelle\n</em>   window : nouvelle fenêtre\n*   self : onglet actuel&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n\n</p>\n<p>Par exemple, pour créer un lien vers un blog, avec une icône personnalisée, on pourrait faire ceci :</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-task&quot; content=&quot;name=Le Blog !;action-uri=http://monblog.com;icon-uri=blog.ico&quot;&gt;\n</code></pre>\n<p>Ou pour faire un lien vers une page Twitter en utilisant leur favicon comme icône :</p>\n<pre><code class=\"html\">&lt;meta name=&quot;msapplication-task&quot; content=&quot;name=Twitter;action-uri=http://fr.twitter.com/moi;icon-uri=http://twitter.com/favicon.ico&quot;&gt;\n</code></pre>\n<p>&lt;div class=&quot;note note--info&quot;&gt;Il est tout à fait possible de s&#39;arrêter ici. Ces fonctions sont largement suffisantes pour beaucoup de sites. Les parties suivantes du tutoriel requièrent des notions plus ou moins avancées de Javascript, et ne conviendront pas aux débutants.&lt;/div&gt;\n\n</p>\n<h2 id=\"liste-de-raccourcis-dynamiques\">Liste de raccourcis dynamiques</h2>\n<p>Il est également possible de créer des tâches dynamiquement, en utilisant du Javascript. Ces tâches peuvent être par exemple les derniers articles d’un blog, vos derniers tweets, ou bien les derniers commentaires d’une vidéo. Vous pouvez créer jusqu&#39;à vingt tâches dynamiques, mais <strong>seules les dix dernières seront affichées</strong>.</p>\n<h3 id=\"v-rification-du-_mode-site_\">Vérification du <em>mode site</em></h3>\n<p>Lorsque le site est ouvert depuis un raccourci épinglé, on dit qu&#39;il est en mode site. Il sera donc utile de vérifier en Javascript si le site est exécuté avec ce mode ou pas. Pour ça, il existe une méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ie/ff976310%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msIsSiteMode()</code></a>.</p>\n<p>Nous pouvons créer une fonction simple de vérification, et attribuer le résultat à une variable :</p>\n<p>```var siteMode = testSiteMode();</p>\n<p>// Teste si le site a été lancé depuis un raccourci épinglé (mode site);\nfunction testSiteMode() {\n    try {\n        if (window.external.msIsSiteMode()) {\n            return true;\n        }\n    }\n    catch(e) {\n        return false;\n    }\n}```</p>\n<p>Ainsi, il n’y aura plus qu&#39;à tester la variable <code>siteMode</code> par la suite.</p>\n<h3 id=\"cr-er-une-liste-vide\">Créer une liste vide</h3>\n<p>Avant de pouvoir ajouter des liens à une liste, il faut créer une liste grâce à la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976293%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeCreateJumpList()</code></a>.</p>\n<p><code>javascript window.onload = function() {\n    try {\n        if (siteMode) {\n            // Créer la nouvelle liste\n            window.external.msSiteModeCreateJumpList(&#39;Liste Dynamique&#39;);\n        }\n    }\n    catch (e) {\n        // Echec, ne rien faire\n    }\n}</code></p>\n<p>Ainsi, une nouvelle catégorie est ajoutée au-dessus des &quot;Tâches&quot;.</p>\n<p>Il peut également être utile de remettre à zéro une liste, par exemple à la demande de l’utilisateur, ou pour mettre à jour des liens. Pour cela il existe la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976315%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeClearJumpList()</code></a>.</p>\n<pre><code class=\"javascript\">window.onload = function() {\n    try {\n        if (siteMode) {\n            // Supprimer toute liste dynamique existante\n            window.external.msSiteModeClearJumpList();\n            // Créer la nouvelle liste\n            window.external.msSiteModeCreateJumpList(&#39;Liste Dynamique&#39;);\n        }\n    }\n    catch (e) {\n        // Echec, ne rien faire\n    }\n}\n</code></pre>\n<h3 id=\"ajouter-des-l-ments-la-liste\">Ajouter des éléments à la liste</h3>\n<p>Maintenant que la liste est prête, nous allons y ajouter des éléments le plus simplement du monde, grâce à la fonction <a href=\"&quot;MSDN&quot;\"><code>msSiteModeAddJumpListItem()</code></a>.</p>\n<pre><code class=\"javascript\">window.onload = function() {\n    try {\n        if (siteMode) {\n            // Supprimer toute liste dynamique existante\n            window.external.msSiteModeClearJumpList();\n            // Créer la nouvelle liste\n            window.external.msSiteModeCreateJumpList(&#39;Liste Dynamique&#39;);\n\n            // Créer les nouveaux éléments\n            window.external.msSiteModeAddJumpListItem(&#39;Ma Page&#39;, &#39;page.html’, &#39;page2.ico&#39;);\n            window.external.msSiteModeAddJumpListItem(&#39;Mon blog&#39;, &#39;/blog/&#39;, &#39;blog.ico&#39;);\n\n            // Créer les nouveaux éléments\n            window.external.msSiteModeShowJumpList();\n        }\n    }\n    catch (e) {\n        // Echec, ne rien faire\n    }\n}\n</code></pre>\n<p>Notez l’utilisation de la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976318%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeShowJumList()</code></a> : elle est obligatoire, sans quoi les liens ajoutés ne seront pas affichés.</p>\n<p>Il ne vous reste désormais qu&#39;à trouver des idées d’application. Vous pouvez par exemple, comme <strong>Amazon</strong>, enregistrer une liste de favoris, ou la liste des dernières recherches effectuées.</p>\n<p>On pourrait par exemple imaginer créer un bouton pour l’ajout d’une fiche de membre à une liste de Favoris. Le bouton appellerait une fonction <code>AjouterMembreListe</code>, et les paramètres seraient passés dynamiquement à la fonction avec PHP (ou autre) :</p>\n<pre><code class=\"javascript\">var site = null;\nfunction AjouterMembreListe(nomMembre, adresseMembre) {\n    site = window.external;\n    site.msSiteModeCreateJumpList(&#39;Mes membres favoris&#39;);\n    site.msSiteModeAddJumpListItem(nomMembre, adresseMembre, &#39;images/membre.ico&#39;);\n}\n</code></pre>\n<h2 id=\"les-notifications-en-javascript\">Les notifications en Javascript</h2>\n<p>Puisque l’on a ajouté des éléments de manière dynamique, il peut être utile de prévenir l’utilisateur que des changements ont été faits. Il y a deux possibilités pour cela : ajouter une image superposée à l’icône, ou faire clignoter l’icône dans la barre des tâches.</p>\n<h3 id=\"ajouter-une-image-par-dessus-l-ic-ne\">Ajouter une image par-dessus l’icône</h3>\n<p>Une technique qui peut-être très pratique pour indiquer qu&#39;un certain type d’événement s&#39;est produit. Par exemple, que l’utilisateur a reçu un certain nombre de messages.</p>\n<p>&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/03/notif-fb.jpg\" alt=\"notification-facebook\">&lt;figcaption&gt;La notification de Facebook&lt;/figcaption&gt;&lt;/figure&gt;\n\n</p>\n<p>Cela se fait avec la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976316%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeSetIconOverlay()</code></a>, qui attend deux paramètres : l’adresse de l’image (obligatoire), et un texte descriptif de la notification (optionnel).</p>\n<p><code>window.external.msSiteModeSetIconOverlay(&#39;newMP.ico&#39;, &#39;Un nouveau message privé est arrivé&#39;);</code></p>\n<p>Pour retirer cette image, on peut utiliser la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976314%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeClearIconOverlay()</code></a>, par exemple lorsque les messages ont été lus.</p>\n<h3 id=\"exemple-concret\">Exemple concret</h3>\n<p>Voici maintenant un exemple d’utilisation, qui imagine que nous avons un système de Commentaires. On souhaite créer une fonction qui modifie l’image en fonction d’un statut passé dynamiquement en fonction d’un événement. Une recherche est faite sur le site pour détecter la présence de nouveaux messages, et le résultat est transmis à l’icône épinglée par le biais d’une fonction :</p>\n<ul>\n<li>État normal</li>\n<li>Nouveaux messages, avec affichage du nombre de messages</li>\n<li>En recherche</li>\n<li>Erreur\n```javascript\nvar etats = { VIDE: 0, NORMAL: 1, ERREUR: 2 };\nvar messages = [ &#39;En attente&#39;, &#39;Nouveaux commentaires !&#39;, &#39;Erreur&#39; ];</li>\n</ul>\n<p>// Fonction de modification de l’icône en fonction du statut\nfunction modifierIcone(statut) {\n    switch (statut) {\n        case etats.VIDE:\n        // S&#39;il n’y a aucune notification, enlever l’image et laisser l’icône vide\n        clearOverlayIcon();\n        break;</p>\n<pre><code>    case etats.NORMAL:\n    // Si le nombre de messages non lu est nul, enlever l’image et laisser l’icône vide\n    if (messagesNonLus == 0) {\n        clearOverlayIcon();\n    }\n    else {\n        // Sinon, appliquer une icône particulière en fonction du nombre de messages, et afficher une description\n        setOverlayIcon(&#39;img/num_&#39; + messagesNonLus + &#39;.ico&#39;, messages[2]);\n    }\n    break;\n\n    case etats.ERREUR:\n                // S&#39;il y a une erreur, l’afficher, puis remettre l’icône normale\n    if (messagesNonLus == 0) {\n        setOverlayIcon(&#39;img/erreur.ico&#39;, messages[3]);\n        setStatus(etats.CLEAR);\n    }\n    break;\n}\n</code></pre><p>}```</p>\n<h3 id=\"clignotement-du-bouton-dans-la-barre-des-t-ches\">Clignotement du bouton dans la barre des tâches</h3>\n<p>&lt;div class=&quot;note note--important&quot;&gt;Utile pour attirer rapidement l’attention, il faut néanmoins se demander s&#39;il n’est pas plus pertinent d’utiliser une image superposée à l’icône. En effet, il n’y a rien de plus agaçant pour un utilisateur qu&#39;un élément qui clignote toutes les deux minutes. Il sera par exemple préférable de mettre un chiffre en image pour signaler que de nouveaux commentaires ont été postés, plutôt que de flasher l’utilisateur à chaque fois.&lt;/div&gt;\n&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/03/clignotement.jpg\" alt=\"clignotement\">&lt;figcaption&gt;Un exemple de clignotement&lt;/figcaption&gt;&lt;/figure&gt;\n\nLe clignotement se fait au moyen de la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff975166%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeActivate()</code></a>. Celle-ci ne prend aucun paramètre, et ne fait rien d’autre que faire clignoter l’icône jusqu&#39;à ce que l’utilisateur ait ouvert la fenêtre.\n\n## L’aperçu miniature et la barre d’outils\n\nPour aller plus loin, il est également possible d’ajouter des fonctionnalités à la fenêtre d’aperçu, à la manière des lecteurs multimédias qui disposent dans cette même fenêtre de boutons tels que Play, Stop, Pause, Suivant et Précédent. Il est possible de créer le même genre d’éléments pour un site épinglé.\n\nAu-delà de boutons de lecture, on peut imaginer ajouter un bouton pour accéder directement à une liste de favoris, un bouton de partage sur les réseaux sociaux, modifier un état (en ligne/hors ligne), ou bien accéder aux informations de localisation d’une entreprise ; bref, un véritable petit contrôle à distance de votre site.\n\n&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/03/barre-outils.jpg\" alt=\"barre d&#039;outils\">&lt;figcaption&gt;Une barre d’outils&lt;/figcaption&gt;&lt;/figure&gt;\n\n#### À retenir avant toute chose\n\n<em>   Tout d’abord, il ne peut y avoir que sept boutons en tout et pour tout. Il est possible cependant d’affecter à certains boutons un double emploi. Par exemple, le bouton Play devient le bouton pause lorsque la lecture commence.\n</em>   Ensuite, vous ne pouvez pas ajouter de boutons à une barre d’outils déjà créée. Il faudra obligatoirement la réinitialiser. Il est cependant possible de masquer ou désactiver temporairement des boutons qui ne seraient pas désirés.\n<em>   Enfin, la barre d’outils et ses boutons sont créés pour toute la durée de la vue du site en mode épinglé. Si l’utilisateur quitte la page d’origine, les boutons et la barre d’outils restent visibles.\n\n### Créer les boutons et la barre\n\nContrairement aux tâches, les boutons de la barre d’outils doivent être créés avant la barre. Nous utilisons la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976313%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeAddThumbBarButton()</code></a>, qui attend deux paramètres : l’URL de l’icône à utiliser (16×16px), et la description à afficher dans l’infobulle du bouton.\n\n<code>javascript\nvar btnFacebook = window.external.msSiteModeAddThumbBarButton(&#39;facebook.ico&#39;, &#39;Facebook&#39;);\nvar btnTwitter = window.external.msSiteModeAddThumbBarButton(&#39;twitter.ico&#39;, &#39;Twitter&#39;);\nvar btnGoogle = window.external.msSiteModeAddThumbBarButton(&#39;googleplus.ico&#39;, &#39;Google+&#39;);</code>\n\nLe &quot;nom&quot; des boutons (c&#39;est un identifiant) sera utile pour leur attribuer des actions.\n\nIl reste ensuite à afficher la barre avec la fonction <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976319%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeShowThumbBar()</code></a>. Comme signalé en début de chapitre, une fois passée cette étape, il ne sera pas possible d’ajouter de boutons supplémentaires.\n\n<code>javascript\nwindow.external.msSiteModeShowThumbBar();</code>\n\n### Donner des actions aux boutons\n\nRendus ici, nous avons trois jolis boutons affichés sous notre site, mais qui ne servent à rien. Voyons maintenant comment leur offrir une fonction avec un gestionnaire d’événements avec l’événement <a href=\"http://msdn.microsoft.com/fr-fr/library/ff975582%28v=vs.85%29.aspx\" title=\"MSDN\"><code>onmsthumbnailclick</code></a>.\n\n#### Appeler l’événement\n\nEn fonction du mode de document (je vous passe les détails), la méthode d’appel au gestionnaire peut changer. Il faut donc prévoir les deux cas possibles :\n\n<code>if (document.addEventListener) {\n    document.addEventListener(&#39;msthumbnailclick&#39;, actionBouton, false);\n}\nelse if (document.attachEvent) {\n    document.attachEvent(&#39;onmsthumbnailclick&#39;, actionBouton);\n}</code>\n\nAvec ceci, vous n’aurez pas de problème. Continuons donc : on peut maintenant créer la fonction adéquate. Lors de l’étape précédente, nous avons donné des identifiants à chaque bouton, c&#39;est ce qui est passé en paramètre ici :\n\n<code>function actionBouton(bouton) {\n    switch (bouton.buttonID) {\n        case btnFacebook: action; break;\n        case btnTwitter: action; break;\n        case btnGoogle: action; break;\n    }\n}</code>\n\nIl ne reste plus qu&#39;à définir les actions en questions, par exemple en faisant des appels de fonctions que vous aurez préalablement créées (ou que vous allez créer par la suite) :\n\n<code>function actionBouton(bouton) {\n    switch (bouton.buttonID) {\n        case btnFacebook: actionFB(); break;\n        case btnTwitter: actionTwitt(); break;\n        case btnGoogle: actionGplus(); break;\n    }\n}</code>\n\n### Modifier l’affichage des boutons\n\nComme je vous le disais plus tôt, il n’est pas possible d’ajouter ou de modifier des boutons une fois la barre d’outils affichés, mais il est en revanche possible d’agir sur les boutons déjà présents.\n\n#### Activer et désactiver un bouton\n\nSi vous faites un lecteur audio comme dans l’exemple de l’image d’illustration plus haut, il peut être utile d’activer ou désactiver certains boutons. Par exemple, lorsque l’utilisateur est sur la première piste, le bouton &quot;piste précédente&quot; est inutile ; idem lorsqu&#39;il écoute la dernière piste pour le bouton &quot;piste suivante&quot;.\n\nC&#39;est la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976320%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeUpdateThumbBarButton()</code></a> qui va permettre ceci. Elle attend trois paramètres obligatoires :\n\n</em>   l’identifiant du bouton retourné par la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976313%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeAddThumbBarButton()</code></a> ; souvenez-vous, nous avons nommé les nôtres <code>btnFacebook</code>, <code>btnTwitter</code> et <code>btnGoogle</code>&lt;/a&gt; dans le point précédent. Ce sont ces noms qu&#39;il faut indiquer.\n<em>   un booléen qui indiquera si le bouton est activé (<code>true</code>) ou désactivé (<code>false</code>) : c&#39;est ce dont nous allons nous servir ici.\n</em>   un second booléen qui indiquera si le bouton est affiché (<code>true</code>) ou masqué (<code>false</code>)\n\nVoyons un exemple avec deux boutons qui s&#39;activent et se désactivent l’un l’autre :\n\n<code>javascript\nvar btnEtat = 0;\n\nfunction boutonChange() {\n    // On active les deux boutons avant toute chose\n    window.external.msSiteModeUpdateThumbBarButton(boutonID1, true, true);\n    window.external.msSiteModeUpdateThumbBarButton(boutonID2, true, true);\n\n    if (btnEtat === 0) {\n        // Activer le bouton 1 et désactiver le bouton 2\n        window.external.msSiteModeUpdateThumbBarButton(boutonID1, true, true);\n        window.external.msSiteModeUpdateThumbBarButton(boutonID2, false, true);\n        btnEtat = 1;\n    }\n    else {\n        // Activer le bouton 2 et désactiver le bouton 1\n        window.external.msSiteModeUpdateThumbBarButton(boutonID1, false, true);\n        window.external.msSiteModeUpdateThumbBarButton(boutonID2, true, true);\n        btnEtat = 0;\n    }\n}</code>\n\n#### Masquer un bouton\n\nParfois, il peut être utile de masquer un bouton. On utilise donc la même méthode (<a href=\"http://msdn.microsoft.com/fr-fr/library/ff976320%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeUpdateThumbBarButton()</code></a>) que pour l’activation et la désactivation, mais cette fois nous nous intéressons au dernier paramètre attendu par la méthode. Il suffit donc de mettre le dernier paramètre sur false pour masquer un bouton :\n\n<code>javascript\nwindow.external.msSiteModeUpdateThumbBarButton(boutonID, true, false);</code>\n\nLorsqu&#39;on change de page au sein d’un site en mode site, la barre d’outils reste visible tant que la fenêtre épinglée est ouverte, mais les boutons risquent de cesser de fonctionner. En effet, si l’utilisateur va sur un autre site, le gestionnaire d’événements ne sera plus présent. Il peut donc être utile de les masquer lorsque la page où le code se trouve est déchargée.\n\n<code>javascript\nfunction masquerBoutons() {\n    window.external.msSiteModeUpdateThumbBarButton(btnFacebook, true, false);\n    window.external.msSiteModeUpdateThumbBarButton(btnTwitter, true, false);\n    window.external.msSiteModeUpdateThumbBarButton(btnGoogle, true, false);\n}</code>\n\nIl suffit ensuite d’appeler la fonction à l’événement unload :\n\n<code>html\n&lt;body onunload=&quot;masquerBoutons()&quot;&gt;</code>\n\nLors du retour sur la page adéquate, comme les boutons sont créés dans le chargement <code>onload</code>, ils seront à nouveau affichés automatiquement.\n\n#### Modifier l’état d’un bouton en changeant son style\n\nParfois, comme dans le cadre d’un bouton play/pause, il peut être utile de pouvoir changer l’état d’un bouton. C&#39;est possible avec la méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/ff976298%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msSiteModeAddButtonStyle()</code></a>. On peut lui donner quatre paramètres, dont deux sont facultatifs : l’identifiant du bouton, l’icône du nouveau bouton (16×16px toujours), puis la description dans l’infobulle du &quot;nouveau&quot; bouton, et enfin un nouvel ID si besoin.\n\nEn gardant l’idée du bouton play/pause, nous allons d’abord créer les styles par défaut.\n\n<code>btnPlayPause = window.external.msSiteModeAddThumbBarButton(&#39;play.ico&#39;, &#39;Lecture&#39;); stylePlay = 0;\n// Style par défaut\nstylePause = window.external.msSiteModeAddButtonStyle(btnPlayPause, &#39;pause.ico&#39;, &#39;Pause&#39;);</code>\n\nEnsuite, il suffit de modifier ces états via une fonction. On imagine qu&#39;on passe une variable (relative à un player web) <code>etat</code> qui vaut soit pause, soit play.\n\n<code>function playPause(etat) {\n    // En fonction de l’état envoyé, on défini le style à affecter\n    var styleBtn = etat.pause ? stylePlay : stylePause;\n    // On attribue au bouton le nouveau style\n    window.external.msSiteModeShowButtonStyle(btnPlayPause, styleBtn);\n}</code>\n\nEt voilà pour cette partie.\n\n## Aller plus loin : les astuces\n\n### Une image pour épingler le site\n\nComme je vous le disais au début, il est possible de créer des images dans votre site que l’utilisateur aura simplement à déplacer vers la barre des tâches au lieu de l’onglet, vous donnant ainsi la possibilité d’expliquer simplement à vos utilisateurs de quoi il retourne. C&#39;est ainsi que sur certains sites comme HtmlGoodies, les utilisateurs d’Internet Explorer 9 ou plus ont une petite barre affichée indiquant qu&#39;il suffit de la déplacer dans la barre des tâches (l’image étant explicite) pour bénéficier de nouvelles fonctionnalités.\n\n&lt;figure class=&quot;text-center&quot;&gt;<img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/03/htmlgoodies.jpg\" alt=\"htmlgoodies\">&lt;figcaption&gt;L’exemple de HTMLGoodies&lt;/figcaption&gt;&lt;/figure&gt;\n\nFaire ceci est très simple, car il suffit d’ajouter à une image la classe <code>msPinSite</code> pour que le navigateur sache quoi faire de cette image et comment la traiter. N’importe quel format d’image web peut-être utilisé (JPG, GIF, PNG).\n\n<code>html\n&lt;img src=&quot;monImage.png&quot; alt=&quot;Glisser-épingler le site&quot; class=&quot;msPinSite&quot; /&gt;</code>\n\nMicrosoft a d’ailleurs publié une petite page d’exemple, <a href=\"http://ie.microsoft.com/testdrive/Browser/Radio/Default.html\">Pin Site Radio</a>.\n\n### Détecter s&#39;il s&#39;agit du premier lancement du site épinglé\n\nSi vos utilisateurs lancent le site épinglé pour la première fois, il peut être intéressant de les rediriger vers une nouvelle page pour leur en expliquer les fonctionnalités (tâches statiques ou dynamiques…). Pour ça, il existe une méthode <a href=\"http://msdn.microsoft.com/fr-fr/library/gg593108%28v=vs.85%29.aspx\" title=\"MSDN\"><code>msIsSiteModeFirstRun()</code></a>. Vous devez lui donner un booléen en paramètre, qui va définir s&#39;il doit ensuite enregistrer que le site a été consulté pour la première fois ou non.\n\n<code>javascript\ntry {\n    if (window.external.msIsSiteMode()) {\n        //  s&#39;il s&#39;agit du premier lancement\n        if (external.msIsSiteModeFirstRun(false)) {\n            window.location = &quot;./pageExplications.html&quot;\n        }\n    }\n}\ncatch (e) {\n    // Épinglage non-supporté\n}</code>\n\n## Pinify, le plugin jQuery\n\nIl existe un plugin jQuery nommé Pinify, qui apporte quelques suppléments (à consulter sur leur site). Il nécessite jQuery 1.5 minimum. Vous pouvez télécharger la <a href=\"http://jquery.com/\" title=\"jQuery\">dernière version de jQuery</a> depuis le site officiel.\n\nConcrètement, il permet de faire tout ce que l’on vient de voir, aussi bien la partie HTML que Javascript, de manière plus simple et rapide avec la syntaxe habituelle du jQuery. Vous pourrez donc créer vos balises meta, ajouter des listes de raccourcis (tâches) statiques ou dynamiques, gérer les notifications et créer une barre d’outils avec encore plus de facilité.\n\n&lt;div class=&quot;note note--info&quot;&gt;Cette partie est facultative, et s&#39;adresse aux développeurs déjà habitués à manipuler du Javascript et jQuery. Elle sera donc concise et se contentera de présenter la façon de faire pour les étapes vues, en utilisant Pinify ; en cas de besoin, leur documentation est disponible.&lt;/div&gt;\n\n</p>\n<p>Tout d’abord, il faut <a href=\"http://polyfillsbook.com/pinify/\" title=\"Pinify\">télécharger Pinify</a> et ajouter le fichier <code>jquery.pinify.js</code> à notre page (après avoir inclus jQuery). Tout est expliqué sur leur page, je vous laisse le soin d’aller lire leurs explications.</p>\n<p>Ensuite, il suffit d’appeler la fonction <code>.pinify();</code> :</p>\n<pre><code class=\"javascript\">$(&#39;head’).pinify();\n</code></pre>\n<p>À partir de là, le plugin inclus automatiquement les balises meta de base. Nous allons maintenant voir comment les personnaliser.</p>\n<h3 id=\"la-partie-statique\">La partie statique</h3>\n<h4 id=\"ajouter-des-m-tadonn-es-de-base\">Ajouter des métadonnées de base</h4>\n<pre><code class=\"javascript\">$(&quot;head&quot;).pinify({\n    applicationName: &#39;Mon site&#39;,\n    favIcon: &#39;favicon.ico&#39;,\n    navColor: &#39;#bb0055&#39;,\n    startUrl: &#39;http://www.monsite.com&#39;,\n    tooltip: &#39;Afficher mon site&#39;,\n    window: &#39;width=1024;height=768&#39;\n});\n</code></pre>\n<h4 id=\"cr-er-des-t-ches\">Créer des tâches</h4>\n<pre><code class=\"javascript\">$(&quot;head&quot;).pinify({\n    applicationName: &#39;Mon site&#39;,\n    favIcon: &#39;favicon.ico&#39;,\n    navColor: &#39;#bb0055&#39;,\n    startUrl: &#39;http://www.monsite.com&#39;,\n    tooltip: &#39;Afficher mon site&#39;,\n    window: &#39;width=1024;height=768&#39;,\n    tasks: [{\n        &#39;name&#39;: &#39;Lire le site&#39;,\n        &#39;action’: &#39;http://www.monsite.com/mapage.html’,\n        &#39;icon’: &#39;favicon.ico&#39;\n    },\n    {\n        &#39;name&#39;: &#39;Afficher mon blog&#39;,\n        &#39;action’: &#39;http://www.monsite.com/monblog/&#39;,\n        &#39;icon’: &#39;blog.ico&#39;\n    }]\n});\n</code></pre>\n<h3 id=\"la-partie-dynamique\">La partie dynamique</h3>\n<p>Dans l’exemple suivant, on va générer des tâches dynamiques… De manière dynamique. En effet, on va récupérer automatiquement les liens d’un menu de navigation (ici représenté par l’id &quot;menu&quot;) et ajouter chaque lien dans une liste de tâches.</p>\n<pre><code class=\"javascript\">var menuItem = [];\n\n$(&quot;#menu a&quot;).each(data, function (key, val) {\n    var $this = $(this);\n    // On crée un objet dans lequel on stocke le nom, l’adresse et l’adresse de l’icône\n    var item = {\n        &#39;name&#39;: $this.html(),\n        &#39;url’: $this.attr(&#39;href&#39;),\n        &#39;icon’: &#39;favicon.ico&#39;\n    };\n    // l’objet est ensuite ajouté à l’array que nous avons créé plus haut\n    menuItem.push(item);\n});\n\n// On utilise ensuite la fonction d’ajout addJumpList pour créer la liste et l’afficher\n$.pinify.addJumpList ({\n    title: &#39;Mon menu&#39;,\n    items: menuItem\n});\n</code></pre>\n<h3 id=\"les-notifications\">Les notifications</h3>\n<h4 id=\"m-thode-de-l-ic-ne-suppl-mentaire\">Méthode de l’icône supplémentaire</h4>\n<p>Encore plus simple que dans la version d’origine, jQuery oblige :</p>\n<pre><code class=\"javascript\">$.pinify.addOverlay ({\n    icon: &#39;iconeNotif.ico&#39;,\n    title: &#39;Nouvelle notification’\n});\n</code></pre>\n<p>Par opposition, vous pouvez utiliser la fonction <code>clearOverlay()</code> pour retirer une icône.</p>\n<pre><code class=\"javascript\">$.pinify.clearOverlay();\n</code></pre>\n<h4 id=\"m-thode-du-clignotement\">Méthode du clignotement</h4>\n<p>Tout aussi simplement que la méthode initiale :</p>\n<pre><code class=\"javascript\">$.pinify.flashTaskbar();\n</code></pre>\n<h3 id=\"les-aper-us\">Les aperçus</h3>\n<p>Cette fois, le plugin simplifie grandement la tâche :</p>\n<pre><code class=\"javascript\">$.pinify.createThumbbarButtons({\n    buttons: [{\n        name: &#39;Facebook&#39;,\n        icon: &#39;facebook.ico&#39;,\n        click: function () {\n            // Gérer la fonction ici\n        }\n    },\n    {\n        name: &#39;Twitter&#39;,\n        icon: &#39;twitter.ico&#39;,\n        click: function () {\n            // Gérer la fonction ici\n        }\n    }]\n});\n</code></pre>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Voilà, vous savez désormais tout. Il est possible d’aller plus loin encore, en <strong>C#</strong> cette fois-ci, sur un serveur IIS (Windows Server), et de proposer des fonctionnalités avancées. Par exemple, vous pouvez attribuer des fonctions d’administration automatiques à un utilisateur pour peu qu&#39;il ait les droits requis.</p>\n<p>Néanmoins, il s&#39;agit de fonctionnalités bien plus avancées, nous nous arrêterons donc ici pour le moment. De nouvelles fonctionnalités apparaîtront avec les prochaines versions de Windows et d’Internet Explorer, comme déjà depuis IE10 les <strong>notifications de Badge</strong>. Ce sera l’occasion d’y revenir, et le tutoriel sera mis à jour en temps voulu.</p>\n<p>Faites de beaux sites épinglables !</p>\n"},{"title":"Bien utiliser les sprites CSS","author":"Emmanuel B.","date":"2014-03-28 11:15:50","tags":["html/css","seo"],"categories":["Tutoriels"],"template":"post.vue","basename":"er-les-sprites-css","content":"<p>Les sprites CSS sont une façon de se servir d’une seule et même image qui en <em>contient</em> plusieurs, en n’affichant que ce qui nous intéresse. Les avantages de cette technique sont multiples, comme nous allons le voir.</p>\n<p>&lt;!--more--&gt;\n</p>\n<h2 id=\"les-sprites-c-est-quoi-\">Les sprites, c&#39;est quoi ?</h2>\n<p>C&#39;est une technique qui consiste à regrouper plusieurs images en une seule et à ne sélectionner que la zone que l’on veut afficher. Cette technique a été très utilisée dans les jeux vidéos à l’époque des jeux 2D, par exemple ceux où vous cassiez des briques avec un plombier bedonnant en salopette ou un hérisson avec des tennis rouges… En fait, chaque personnage ou objet avait sur une même image toutes les positions nécessaires à son animation, et une seule petite zone était affichée, dans laquelle « défilait » le reste des images selon les actions du joueur. Eh bien en webdesign, c&#39;est un peu pareil, et c&#39;est ce que nous allons voir maintenant.</p>\n<p>Cela va probablement chambouler un peu vos habitudes de découpage d’un design, et vous amener à réfléchir au meilleur moyen de les préparer.</p>\n<p>Concrètement, par exemple pour avoir un ensemble d’icônes faites avec des images qui changent au survol de la souris, vous auriez fait autant d’images que de possibilités :</p>\n<p><img src=\"http://uploads.siteduzero.com/files/237001_238000/237401.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237400.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237396.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237395.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237394.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237393.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237403.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237402.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237392.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237391.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237399.png\" alt=\"icon\"><img src=\"http://uploads.siteduzero.com/files/237001_238000/237397.png\" alt=\"icon\"></p>\n<p>Pour la suite du tutoriel, on va les fusionner comme ceci et utiliser cette image :</p>\n<p><img src=\"https://www.emmanuelbeziat.com/wp-content/uploads/2014/03/sprite-test.png\" alt=\"sprite\"></p>\n<p>&lt;div class=&quot;note note--question&quot;&gt;Mais quel intérêt y a-t-il ? C&#39;est moins pratique en CSS ! Et puis charger une grosse image, ça prend plus de temps qu&#39;une petite, non ?&lt;/div&gt;\n\n</p>\n<p>Songez à ceci : la grande image fait 68 ko, chaque petite fait 12 ko. Donc, d’un côté on chargera une fois 68ko, et de l’autre on chargera douze fois 12 ko, soient… 144 ko. Mais ce n’est pas tout : à chaque fois que vous allez devoir charger une image, donc effectuer une requête HTTP pour récupérer l’image et l’afficher, soit un aller-retour. En n’ayant qu&#39;une seule image, vous économisez de nombreux allers-retours. Certes cela paraît minime, mais imaginez que vous ayez des centaines de milliers de visiteurs uniques par jour !</p>\n<p>De plus, dans le cas d’un élément qui change d’image au survol, vous êtes certain qu&#39;il n’y aura pas de latence au moment du survol : le site n’aura pas à aller demander l’image et à la charger, puisqu&#39;elle a déjà été chargée et mise en cache.</p>\n<h2 id=\"une-premi-re-approche-le-principe\">Une première approche : le principe</h2>\n<p>Maintenant que nos images sont prêtes, il va falloir choisir en CSS ce que l’on veut afficher. Pour cela, il faut d’abord que l’image soit définie comme background dans un objet ayant une certaine taille.</p>\n<p>&lt;div class=&quot;note note--info&quot;&gt;En fonction de ce que l’on veut et de la façon dont on a organisé notre image, une seule taille (largeur ou hauteur) peut être définie, par exemple pour faire un <code>repeat-x</code> ou <code>repeat-y</code>.&lt;/div&gt;\n\n</p>\n<p>Pour l’instant, prenons un cas simple où l’on veut afficher des icônes les unes à la suite des autres, toutes de largeur et hauteur fixes et définies.</p>\n<p>Voici notre code HTML :</p>\n<pre><code class=\"html\">&lt;ul class=&quot;icon&quot;&gt;\n    &lt;li class=&quot;icon__item icon__item--1&quot;&gt;&lt;/li&gt;\n    &lt;li class=&quot;icon__item icon__item--2&quot;&gt;&lt;/li&gt;\n    &lt;li class=&quot;icon__item icon__item--3&quot;&gt;&lt;/li&gt;\n    &lt;li class=&quot;icon__item icon__item--4&quot;&gt;&lt;/li&gt;\n    &lt;li class=&quot;icon__item icon__item--5&quot;&gt;&lt;/li&gt;\n    &lt;li class=&quot;icon__item icon__item--6&quot;&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<p>Chaque point de la liste sera donc une icône. Vous n’êtes évidemment pas obligé d’utiliser des listes. Comme elles sont toutes de même taille, on applique une classe « icone », la même pour toutes afin de ne pas répéter les mêmes éléments à chaque fois, et ne pas avoir à toutes les modifier en cas de changement :</p>\n<pre><code class=\"css\">/* Cibler les éléments &lt;li&gt; appartenant à un élément de classe &quot;icone&quot; */\n.icon__item\n{\n    width: 60px;\n    height: 60px;\n    display: inline-block;\n    background: url(&quot;sprite.png&quot;) no-repeat;\n}\n</code></pre>\n<p>Qu&#39;avons-nous fait pour l’instant ? Nous avons simplement dit que chaque point de la liste sera un bloc en ligne de 60 pixels de hauteur et de largeur, et qu&#39;il aura une image de fond. Pour éviter tout problème, on peut lui appliquer la valeur <code>no-repeat</code>.</p>\n<p>Maintenant, c&#39;est là que les choses se corsent (mais pas beaucoup, promis). On va appliquer des classes avec un background de notre image, en leur indiquant la position, au moyen de <code>background-position</code>. Voyons ce que ça donne dans la pratique, pour l’icône de droite seulement :</p>\n<pre><code class=\"css\">.icon__item--1 { background-position: left top; }\n</code></pre>\n<p><img src=\"http://uploads.siteduzero.com/files/237001_238000/237404.png\" alt=\"resultat1\"></p>\n<p>&lt;div class=&quot;note note--question&quot;&gt;Qu&#39;est-ce qui s&#39;est passé précisément ? Il n’y a rien de particulier…&lt;/div&gt;\n\n</p>\n<p>Revoyons un peu le code. On a gardé la même image de background qu&#39;initialement, et on lui a simplement donné une position. L’image est affichée à partir de son bord gauche et de son bord haut (left top). Comme on a dit que la liste avait une largeur et une hauteur de 60 pixels, le reste de l’image au-delà de ces 60×60 n’est pas affiché, on a donc exactement ce qu&#39;on voulait. Sauf qu&#39;on ne s&#39;en rend pas bien compte car on n’a qu&#39;une image pour l’instant, mais nous allons arranger ça très vite.</p>\n<p>&lt;div class=&quot;note note--info&quot;&gt;La position de base est toujours le coin en haut à gauche. Vous pouvez essayer de mettre 0 0 à la place de left top, vous verrez que vous obtiendrez le même résultat.&lt;/div&gt;\n\n</p>\n<h2 id=\"la-m-thode-en-action\">La méthode en action</h2>\n<p>Bien, bien, bien. On voulait peindre le plafond, je vous ai donné l’échelle, je vous ai placé dessus, je vous ai donné la peinture. Maintenant, accrochez-vous bien au pinceau : j’enlève l’échelle !</p>\n<pre><code class=\"css\">.icon__item {\n    width: 60px;\n    height: 60px;\n    display: inline-block;\n    background: url(&quot;sprite.png&quot;) no-repeat;\n}\n\n.icon__item--1 { background-position: left top; }\n.icon__item--2 { background-position: 20% top; }\n.icon__item--3 { background-position: 40% top; }\n.icon__item--4 { background-position: 60% top; }\n.icon__item--5 { background-position: 80% top; }\n.icon__item--6 { background-position: right top; }\n</code></pre>\n<p>Allez, vous allez voir que c&#39;est tout simple. Vous avez même peut-être déjà compris ! Revoyons l’action ralentie au magnétoscope :</p>\n<pre><code class=\"css\">.icon__item--2 { background-position: 20% top; }\n</code></pre>\n<p>On a donc déplacé notre image de 20 % vers la droite, comme dans l’image suivante. Comme l’image est régulière et le nombre d’icônes de 6, faire le déplacement en pourcentage est aisé : il y a en tout cinq déplacements à faire, d’un seul bloc à chaque fois. 1/5 = 20 %.</p>\n<p><img src=\"http://uploads.siteduzero.com/files/237001_238000/237389.png\" alt=\"explication\"></p>\n<p>Ainsi, au fur et à mesure, on peut placer notre image où on le souhaite, et comme on a toujours la taille de 60×60px à partir du point défini, on a l’illusion qu&#39;il n’y a qu&#39;une seule image.</p>\n<p>&lt;div class=&quot;note note--important&quot;&gt;Notez bien : j’ai utilisé les valeurs left et right au début et à la fin car c&#39;est plus simple que des valeurs en pourcentage, mais 0 % et 100 % auraient aussi bien fonctionné. En fonction des images utilisées, ce n’est pas toujours possible. Ici, notre image est « régulière », ce qui permet ce genre de facilités.&lt;/div&gt;\n\n</p>\n<p>Mais il existe également une autre façon de faire : utiliser des valeurs en pixels. Nous allons voir comment.</p>\n<pre><code class=\"css\">.icon__item--1 { background-position: left top; }\n.icon__item--2 { background-position: -60px top; }\n.icon__item--3 { background-position: -120px top; }\n.icon__item--4 { background-position: -180px top; }\n.icon__item--5 { background-position: -240px top; }\n.icon__item--6 { background-position: right top; }\n</code></pre>\n<p>Comme vous le voyez, les valeurs en pixels sont négatives. Si vous vous trompez et que vous mettez une valeur positive, le déplacement se fera dans le mauvais sens, et le résultat le plus probable, c&#39;est que vous ne verrez tout simplement pas l’image. Faites bien attention, là encore j’aurais pu utiliser 0px en lieu et place de left et -300px au lieu de right.</p>\n<p>&lt;div class=&quot;note note--question&quot;&gt;Alors, quelle est la différence entre l’utilisation des % et des pixels ?&lt;/div&gt;\n\n</p>\n<p>Il n’y a pas vraiment de différence, mais des avantages et des inconvénients inhérents à chaque méthode. Voyons deux cas :</p>\n<ul>\n<li>vous souhaitez ajouter une icône supplémentaire ;</li>\n<li>vous souhaitez changer la taille des icônes.</li>\n</ul>\n<p>Dans le premier point, si vous avez utilisé les valeurs en pixels, vous n’aurez qu&#39;à ajouter cette image à la suite en rajoutant une classe <code>icon__item--7</code> avec un décalage de 60px de plus que la précédente. Si vous utilisiez les %, il va vous falloir tout réajuster. Dans le second point, si vous avez utilisé les valeurs en pourcentage, vous n’aurez qu&#39;à changer la taille dans la classe <code>icône</code>, et ne plus toucher à rien. En revanche, si vous utilisiez des valeurs en pixels, il va vous falloir tout recalculer pour l’ensemble de vos classes <code>icon__item--X</code>. De plus, dans le cas où nous aurions plusieurs images fusionnées de différentes tailles, il pourrait arriver que le pourcentage ne soit pas assez précis.</p>\n<p>Voyons où nous en sommes :</p>\n<p><img src=\"http://uploads.siteduzero.com/files/237001_238000/237405.png\" alt=\"preview\"></p>\n<p>Voilà, maintenant que vous avez digéré ça, faites quelques essais. On va passer au morceau final, somme toute assez simple une fois ceci compris.</p>\n<h2 id=\"un-peu-d-animation-le-survol\">Un peu d’animation : le survol</h2>\n<p>Vous l’attendiez tous, hein ?</p>\n<p>En fait, la gestion du survol de la souris va être toute simple à partir de ce qu&#39;on a déjà fait. Comme un code vaut mieux qu&#39;un long discours, voici :</p>\n<pre><code class=\"css\">.icon__item {\n    width: 60px;\n    height: 60px;\n    display: inline-block;\n    background-image: url(&quot;sprite.png&quot;);\n    background-repeat: no-repeat;\n}\n\n.icon__item--1 { background-position: left top; }\n.icon__item--2 { background-position: 20% top; }\n.icon__item--3 { background-position: 40% top; }\n.icon__item--4 { background-position: 60% top; }\n.icon__item--5 { background-position: 80% top; }\n.icon__item--6 { background-position: right top; }\n\n.icon__item--1:hover { background-position: left bottom; }\n.icon__item--2:hover { background-position: 20% bottom; }\n.icon__item--3:hover { background-position: 40% bottom; }\n.icon__item--4:hover { background-position: 60% bottom; }\n.icon__item--5:hover { background-position: 80% bottom; }\n.icon__item--6:hover { background-position: right bottom; }\n</code></pre>\n<p>Ouh, c&#39;était compliqué hein ?</p>\n<h3 id=\"alors-qu-avons-nous-fait-\">Alors qu&#39;avons-nous fait ?</h3>\n<p>Grâce à la pseudo-classe <code>:hover</code>, on peut agir sur l’action du survol de la souris sur l’élément. On a donc tout simplement remplacé top par <code>bottom</code> pour afficher le bas de chaque position d’icône. Ainsi, on a donc tout un menu en icônes, dynamique, avec une seule image. Il suffirait d’y rajouter des liens, je vous laisse le soin de faire ce que vous voulez.</p>\n<p><img src=\"http://uploads.siteduzero.com/files/237001_238000/237390.png\" alt=\"preview\"></p>\n<h2 id=\"cas-particulier-les-images-r-p-t-es\">Cas particulier : les images répétées</h2>\n<p>&lt;div class=&quot;note note--important&quot;&gt;Les sprites ont tout de même leurs limites. En effet, il arrivera dans vos designs que vous devrez répéter une image. Or, si vous choisissez d’affecter un background sur toute une surface, toute l’image va apparaître.&lt;/div&gt;\n\n</p>\n<p>Il va donc vous falloir faire attention, et penser à regrouper vos images à répéter suivant leur sens. Pour répéter vos images horizontalement avec un <code>repeat-x</code>, vous devez placer vos images verticalement et jouer sur le placement en hauteur :</p>\n<p><img src=\"http://uploads.siteduzero.com/files/241001_242000/241514.png\" alt=\"preview\"></p>\n<p>À l’inverse, pour répéter vos images verticalement avec un <code>repeat-y</code>, vous devrez concevoir vos sprites horizontalement :</p>\n<p><img src=\"http://uploads.siteduzero.com/files/241001_242000/241515.png\" alt=\"preview\"></p>\n<p>Voilà pourquoi il est important de bien réfléchir à l’organisation de vos sprites.</p>\n<h3 id=\"petits-exemples\">Petits exemples</h3>\n<p>Voilà ce qu&#39;avait Google il fut un temps :</p>\n<p><img src=\"http://uploads.siteduzero.com/files/253001_254000/253715.png\" alt=\"Google\"></p>\n<p>Je vous laisse regarder ceux de <a href=\"http://l2.yimg.com/dh/ap/default/140318/pc_icons_btns_sprite_0318_3pm_v2.png\" title=\"Sprite Yahoo\">Yahoo</a>, <a href=\"https://ssl.gstatic.com/gb/images/v1_b444d4f7.png\" title=\"Sprite Google\">Google</a>, <a href=\"https://fbstatic-a.akamaihd.net/rsrc.php/v2/yI/r/-AOcMrAaRxs.png\" title=\"Sprite Facebook\">Facebook</a>, <a href=\"http://g-ecx.images-amazon.com/images/G/08/gno/sprites/global-sprite-v1._V361337220_.png\" title=\"Sprite Amazon\">Amazon</a>…</p>\n<h2 id=\"les-sprites-sous-un-lien-textuel\">Les sprites sous un lien textuel</h2>\n<p>J’ai eu quelques demandes et questions concernant les possibilités d’utilisation des sprites. Des questions qui peuvent paraître simples à certains, mais que je vais quand même aborder ici pour que tout le monde trouve son bonheur.</p>\n<p>&lt;div class=&quot;note note--quesion&quot;&gt;Comment puis-je utiliser la méthode des sprites avec des liens, pour faire un menu ?\nComment puis-je afficher du texte par-dessus mes images ?&lt;/div&gt;\n&lt;div class=&quot;note note--info&quot;&gt;Cet exemple ne concerne que des liens ayant un contenu textuel écrit dans le HTML, sous lequel on souhaiterait mettre une image de fond changeant au survol. Pour des images cliquables, voir la partie suivante.&lt;/div&gt;\n\n</p>\n<p>Le principe des sprites peut être appliqué sur n’importe quel élément. Si vous souhaitez faire des liens cliquables dont le fond change au survol, comme sur le Site du Zéro, il faut appliquer nos classes à la balise du lien, comme suit :</p>\n<pre><code class=\"html\">&lt;ul class=&quot;menu&quot;&gt;\n    &lt;li class=&quot;menu__item&quot;&gt;&lt;a class=&quot;menu__link&quot; href=&quot;lien&quot;&gt;Ma Page 1&lt;/a&gt;&lt;/li&gt;\n    &lt;li class=&quot;menu__item&quot;&gt;&lt;a class=&quot;menu__link&quot; href=&quot;lien&quot;&gt;Ma Page 2&lt;/a&gt;&lt;/li&gt;\n    &lt;li class=&quot;menu__item&quot;&gt;&lt;a class=&quot;menu__link&quot; href=&quot;lien&quot;&gt;Ma Page 3&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<p>Voici notre image (certes un peu moche… Mais c&#39;est pour l’idée) :</p>\n<p><img src=\"http://uploads.siteduzero.com/files/247001_248000/247162.png\" alt=\"image test sprite\"></p>\n<pre><code class=\"css\">.menu {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n.menu__item {\n    float: left;\n    width: auto;\n}\n\n.menu__link {\n    display: block;\n    width: 140px;\n    height: 40px;\n    line-height: 40px;\n    text-align: center;\n    background: url(&quot;mon-image.png&quot;) no-repeat 0 top; /* On positionne l’image en haut */\n}\n\n.menu__link:hover {\n    /* On affiche seulement la portion de l’image voulue : le bas */\n    background-position: 0 bottom;\n}\n</code></pre>\n<p>De cette manière, vous constatez que comme on applique l’image en background sur un élément, on peut parfaitement y afficher du texte et utiliser les liens normalement.</p>\n<h3 id=\"cas-des-images-cliquables\">Cas des images cliquables</h3>\n<p>&lt;div class=&quot;note note--alert&quot;&gt;Malgré tout, il est important de savoir que dans le cas d’une image cliquable, les sprites ne devraient pas être utilisés !&lt;/div&gt;\n\n</p>\n<p>En effet, utiliser les sprites avec un lien sans texte reviendrait à avoir un lien vide :</p>\n<pre><code class=\"html\">&lt;a href=&quot;mapage.html&quot;&gt;&lt;/a&gt;\n</code></pre>\n<p>Sur ce code, on appliquerait nos backgrounds et l’effet de positionnement au survol. Mais créer un lien vide en HTML n’est pas une bonne chose, pour des questions d’accessibilité.</p>\n<p>&lt;div class=&quot;note note--question&quot;&gt;Mais pourquoi ? Comme on le stylise en CSS, on peut quand même le voir et cliquer dessus, non ?&lt;/div&gt;\n\n</p>\n<p>Certes, mais songez que certains internautes sont contraints de naviguer avec l’affichage des CSS désactivé, ou des lecteurs d’écrans. C&#39;est le cas des personnes malvoyantes. Pour eux, le résultat sera sans appel : un lien vide qui n’affiche rien, et qui n’est donc pas cliquable. En conséquence, il devient impossible de naviguer sur votre site. C&#39;est pour cela qu&#39;il faut utiliser une image dans le HTML.</p>\n<p>&lt;div class=&quot;note note--question&quot;&gt;Mais le problème sera le même avec une image dans le HTML : si un utilisateur est malvoyant, il ne la verra pas !&lt;/div&gt;\n\n</p>\n<p>Et c&#39;est là le rôle de l’attribut <code>alt</code>, qui est obligatoire dans la balise <code>&lt;img /&gt;</code>. En effet, dans le cas où une image ne serait pas chargée pour une raison ou une autre (erreur de connexion, lecteur d’écran pour personne malvoyante…), c&#39;est la description contenue dans l’attribut <code>alt</code> qui sera affiché ! Ainsi, le lien reste toujours cliquable. Pensez donc toujours à remplir cette balise consciencieusement.</p>\n<h3 id=\"une-solution-\">Une solution ?</h3>\n<p>Bien sûr ! Et elle se trouve dans un autre article sur ce blog ! &lt;q&gt;<a href=\"http://www.emmanuelbeziat.com/blog/changer-une-image-au-survol/\" title=\"Changer une image au survol\">Changer une image au survol</a>&lt;/q&gt;.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Pour conclure, voici un petit site pour vous aider à créer vos sprites : <a href=\"http://fr.spritegen.website-performance.org/\">Spritegen</a>, ainsi qu&#39;un autre pour optimiser la taille de vos images en les compressant sans en dégrader la qualité : <a href=\"http://www.smushit.com/ysmush.it/\">Smush.it</a>.</p>\n"}]}
